{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7974EE2956eaAd96fC4b572330C55c19c265815",
    "txHash": "0xa1dc118aa4f90548ceedf567b056ccce701592b3bb447d6fef24404fa302fcb5",
    "deployTransaction": {
      "hash": "0xa1dc118aa4f90548ceedf567b056ccce701592b3bb447d6fef24404fa302fcb5",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x7829Afa127494Ca8b4ceEF4fb81B78fEE9d0e471",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3b9aca10"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca10"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 14,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x0c3fcda7b257683f1069a39f6ce49c940fd7edbcb9f48b07e38dae935c185db3",
      "s": "0x671ab3088055d047ffcf04a04c1bb442ec91b8b30800ba0dfa413a7aa640c50f",
      "v": 0,
      "creates": "0xe7974EE2956eaAd96fC4b572330C55c19c265815",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0xa4F6C921f914ff7972D7C55c15f015419326e0Ca",
      "txHash": "0x8fcf4ac9607cce8cae75b2393807b9d8175dfb04e006c24bd5e38fdfed7569ae",
      "kind": "transparent"
    },
    {
      "address": "0xE680329F54974659525213828c7b86CaFA358403",
      "txHash": "0x3468b10d5bf8b05cb16e3947fb372858073a1fe354ae8f1bde8313f3174dd502",
      "kind": "transparent"
    },
    {
      "address": "0x1188dD1a0F42BA4a117EF1c09D884f5183D40B28",
      "txHash": "0x8c3b44ff51427cbe3f5e394e2151f6505ff0fef83265f7bfe9eecdedd84000c2",
      "kind": "transparent"
    },
    {
      "address": "0x7FDd24f30fB8a3E0021e85Fdb737a3483D3C8135",
      "txHash": "0xe4bc6a7b52609c76d43a8546e14e372e55a9aef2288ec28d74261be2d2bc142b",
      "kind": "transparent"
    },
    {
      "address": "0x8982fe251544E0Ab46d6AE339a269293d7c2458F",
      "txHash": "0x4304385f22c2f85a4a9d07b39b853bfc2038755a401c084a2aa300b8c739467c",
      "kind": "transparent"
    },
    {
      "address": "0xDDC453e1fFd3EfFe0212C3cdcc6a7B8e23C1B105",
      "txHash": "0x3b894e397d00e52c4dacd185c93c4d0490ec40347276a05f0eb776b04428818c",
      "kind": "transparent"
    },
    {
      "address": "0x3Ae5d499cfb8FB645708CC6DA599C90e64b33A79",
      "txHash": "0x61d24e528240db518bae315ed21beeb839b6eff0d832f2b7604bf50293bdfb73",
      "kind": "transparent"
    },
    {
      "address": "0x90098737eB7C3e73854daF1Da20dFf90d521929a",
      "txHash": "0xb3609e416bd26875879b2ef2c6ae276874d6718fb74a84069940e4ebd3364481",
      "kind": "transparent"
    },
    {
      "address": "0x10F6A2795B14f13771d885D72e5925Aff647B565",
      "txHash": "0xa8e6581e2ff55776d4e2fefb667ad6810ee4fc9d4f3beefa51e9fa29fd56e889",
      "kind": "transparent"
    },
    {
      "address": "0x2C2535D45C1EC97774fD61935D116e40a2A05ff5",
      "txHash": "0xd5b880c7a2abfd2148d60008590b6e28efb8c7453e2ba4988de1512c0b8bc2c9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1467835772c77b70cd50f3d614ff7033544e565d636c763d2135ad7b391fe5d6": {
      "address": "0xaEC2F2Dc227401570E87F5F1baEf04Cf8aA8196A",
      "txHash": "0xde3d289212484ca34bd603624956afbec8242195e6a9a3930487171870764e81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3118_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2495_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:485"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721PausableUpgradeable.sol:38"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Registrar.sol:24"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)3437_storage)",
            "src": "contracts\\Registrar.sol:28"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)3437_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)3437_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)3118_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3118_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2732_storage"
              }
            ]
          },
          "t_struct(Set)2732_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)2495_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2177_storage"
              }
            ]
          },
          "t_struct(Map)2177_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2169_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2169_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2169_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "17e9cce813bb88a2439cdcc328474ac3e6c829e6cc2b95df43e9b83883e5fe41": {
      "address": "0x6A54fBD85F8834dB806a8433b5FD5fe2db67731C",
      "txHash": "0x4cb6260b736356e84291d5597fd905971f895122c3a0522d0a4a6fe3c6897a67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c25db2758acba28df7dcea8cbeb230d58d4493bcbbc43a1b9fffcb37c59c4648": {
      "address": "0xb5eF6582Eb1f72ee0E7cd29274D3C7447c91B268",
      "txHash": "0x643fd8914490a64bea11571ae9e4c3b4865a78021393722aaa11ab3f62b3b2c0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721HolderUpgradeable.sol:30"
          },
          {
            "contract": "BasicController",
            "label": "registrar",
            "type": "t_contract(IRegistrar)7062",
            "src": "contracts\\BasicController.sol:18"
          },
          {
            "contract": "BasicController",
            "label": "rootDomain",
            "type": "t_uint256",
            "src": "contracts\\BasicController.sol:19"
          }
        ],
        "types": {
          "t_contract(IRegistrar)7062": {
            "label": "contract IRegistrar"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "78d531bf853dfb664363aa4e53d26187d348231b5e36089c44922cb189b21a1b": {
      "address": "0x52a81DfD6B5EA5E3b8133e0c6f48e520db24F456",
      "txHash": "0x71dc194320494066bc400998119f7baa2fc7bd5cb63056d0357c8a1420db9481",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721HolderUpgradeable.sol:30"
          },
          {
            "contract": "StakingController",
            "label": "token",
            "type": "t_contract(IERC20Upgradeable)585",
            "src": "contracts\\StakingController.sol:23"
          },
          {
            "contract": "StakingController",
            "label": "registrar",
            "type": "t_contract(IRegistrar)1925",
            "src": "contracts\\StakingController.sol:24"
          },
          {
            "contract": "StakingController",
            "label": "controller",
            "type": "t_address",
            "src": "contracts\\StakingController.sol:25"
          },
          {
            "contract": "StakingController",
            "label": "requestCount",
            "type": "t_uint256",
            "src": "contracts\\StakingController.sol:26"
          },
          {
            "contract": "StakingController",
            "label": "requests",
            "type": "t_mapping(t_uint256,t_struct(Request)1385_storage)",
            "src": "contracts\\StakingController.sol:35"
          },
          {
            "contract": "StakingController",
            "label": "domainData",
            "type": "t_mapping(t_uint256,t_struct(DomainData)1364_storage)",
            "src": "contracts\\StakingController.sol:36"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)585": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IRegistrar)1925": {
            "label": "contract IRegistrar"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Request)1385_storage)": {
            "label": "mapping(uint256 => struct StakingController.Request)"
          },
          "t_struct(Request)1385_storage": {
            "label": "struct StakingController.Request",
            "members": [
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "offeredAmount",
                "type": "t_uint256"
              },
              {
                "label": "requester",
                "type": "t_address"
              },
              {
                "label": "requestedName",
                "type": "t_string_storage"
              },
              {
                "label": "accepted",
                "type": "t_bool"
              },
              {
                "label": "domainNonce",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainData)1364_storage)": {
            "label": "mapping(uint256 => struct StakingController.DomainData)"
          },
          "t_struct(DomainData)1364_storage": {
            "label": "struct StakingController.DomainData",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256"
              },
              {
                "label": "fulfilledRequest",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "a0db83a40f1596b2fb7b2abdea23ef59028f6608e838e2851ca3150aac9c2d10": {
      "address": "0x7352ED95620e3600EF4438E99Bf14dCDa3413865",
      "txHash": "0x5a2f6175aad668c12a5d5010f0534a00cc0f178257a2e6b2f4f808943823fa13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b0ff53056d59149edf012adfdc9076853b54dfd6f710e77fdd188f7b8d7e7004": {
      "address": "0xA5f0973536b1198E41f5D8Abe7a57602B4f69446",
      "txHash": "0x99f60c64ecad49182ea1c0d2b9c3b00d6bbd615f50df6f4cdfcbf27b61432fe7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "07b797482646b16027a0251cea6d55beea71714adf3fd9b5accf81ab80556556": {
      "address": "0x8CCC39985BB460A62678e5f1Ed04B08c2D02E2C0",
      "txHash": "0x5d713bbc9d91fb8b464fa6ddb972e46156dec6fa32d82fdd2ce3b12429aa06e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721HolderUpgradeable.sol:30"
          },
          {
            "contract": "BasicController",
            "label": "registrar",
            "type": "t_contract(IRegistrar)7055",
            "src": "contracts\\BasicController.sol:18"
          },
          {
            "contract": "BasicController",
            "label": "rootDomain",
            "type": "t_uint256",
            "src": "contracts\\BasicController.sol:19"
          }
        ],
        "types": {
          "t_contract(IRegistrar)7055": {
            "label": "contract IRegistrar"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "8024ce0b379ea05a66fa943fa6f449d5c0ab1686c364ae0effe09fbd642ac0e1": {
      "address": "0xe7AA322075d647B106Da02740D299AA7c266630B",
      "txHash": "0xa63eeabf0c04431c1b8deaa3e83b6453dc7e136a3d3eb9307da672757b9ce31f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6014_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5365_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6408_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)904",
            "src": "contracts\\registrar\\Registrar.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6408_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6408_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)904": {
            "label": "contract IZNSHub"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6014_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6014_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5610_storage"
              }
            ]
          },
          "t_struct(Set)5610_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5365_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5036_storage"
              }
            ]
          },
          "t_struct(Map)5036_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5027_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5027_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5027_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "552506cfb52f328af82b23f75d93a80d60ecde43730fee77ec374096a653e05a": {
      "address": "0xee0e100120B4D535B470c502837d8307505BB08A",
      "txHash": "0xc9b5e5063da789de8d55605e83d712e098222226532e9acf3ae08277358c02b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ZNSHub",
            "label": "authorizedRegistrars",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:57"
          },
          {
            "contract": "ZNSHub",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:60"
          },
          {
            "contract": "ZNSHub",
            "label": "defaultRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:63"
          },
          {
            "contract": "ZNSHub",
            "label": "domainToContract",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:66"
          },
          {
            "contract": "ZNSHub",
            "label": "subdomainRegistrars",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:69"
          },
          {
            "contract": "ZNSHub",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:72"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c3921a6bec124dc67f651b4cc55c70cb1ca57c4d430673115611bf0b9a9db766": {
      "address": "0xa6954E1874798cab6D1964B5972caC09b2FCBD49",
      "txHash": "0xd24ae0730fe27938ecf1dc488162b8daa16486c3e5fe6c7a82ceff5f146553a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6014_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5365_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6408_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)904",
            "src": "contracts\\registrar\\Registrar.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6408_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6408_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)904": {
            "label": "contract IZNSHub"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6014_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6014_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5610_storage"
              }
            ]
          },
          "t_struct(Set)5610_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5365_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5036_storage"
              }
            ]
          },
          "t_struct(Map)5036_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5027_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5027_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5027_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "55543f2b1e54bb8d3d26f6510df2cd0bbdce0727e70097771b5379c36da722c4": {
      "address": "0x6e856B213Db6901f124dE9f80F5A154A4D7689C8",
      "txHash": "0x4090f1b5dc45e79614a859a5421d959b81c005f6ad71c40edd1adb394e7de998",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ZNSHub",
            "label": "authorizedRegistrars",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:57"
          },
          {
            "contract": "ZNSHub",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:60"
          },
          {
            "contract": "ZNSHub",
            "label": "defaultRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:63"
          },
          {
            "contract": "ZNSHub",
            "label": "domainToContract",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:66"
          },
          {
            "contract": "ZNSHub",
            "label": "subdomainRegistrars",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:69"
          },
          {
            "contract": "ZNSHub",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:72"
          },
          {
            "contract": "ZNSHub",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\ZNSHub.sol:74"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6d42016f4e41979e632201c712eb704268de7597fdb55efd04d9529960b4cc14": {
      "address": "0x6f49fc3BDd7AB7004e6Be1781408b7C51987FC4f",
      "txHash": "0x5d5d898af4a005569ec733ec15049d530d8cf970aa35a20e51eae86c1ff988df",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6014_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5365_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6408_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)904",
            "src": "contracts\\registrar\\Registrar.sol:51"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6408_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6408_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)904": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6014_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6014_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5610_storage"
              }
            ]
          },
          "t_struct(Set)5610_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5365_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5036_storage"
              }
            ]
          },
          "t_struct(Map)5036_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5027_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5027_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5027_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "3298561470f7edc9d9e5c3768e09031cccff9e7249303d62729d77b32fd73574": {
      "address": "0x4E3bEA2ae27d13749191dAFe5A96C3857BEe11D7",
      "txHash": "0x476cd0c9507ad0d057fc95a0e541f9317f8fadcf56d361f34d2b92e32454690d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6225_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5576_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:32"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6629_storage)",
            "src": "contracts\\registrar\\Registrar.sol:36"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:45"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:49"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)1115",
            "src": "contracts\\registrar\\Registrar.sol:52"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6629_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6629_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)1115": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6225_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6225_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5821_storage"
              }
            ]
          },
          "t_struct(Set)5821_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5576_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5247_storage"
              }
            ]
          },
          "t_struct(Map)5247_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5238_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5238_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5238_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "49a5d521481f11962d0b7e4ee244b8cc57ccac129b008956dd592061d7be8948": {
      "address": "0xF1BDaA7e1A8cE5b10604AeA1e6020c7ee9CFD780",
      "txHash": "0xc81094edf7afc85d0d98aa1c0ffb4e4c506d9d4f8105aa5068e0d299574a17f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4240_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3591_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:32"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)4645_storage)",
            "src": "contracts\\registrar\\Registrar.sol:36"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:45"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:49"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)312",
            "src": "contracts\\registrar\\Registrar.sol:52"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)4645_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)4645_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)312": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)4240_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)4240_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3836_storage"
              }
            ]
          },
          "t_struct(Set)3836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3591_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3262_storage"
              }
            ]
          },
          "t_struct(Map)3262_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3253_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3253_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)3253_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "4f755e31b2af1ecac6cce220bc93a9e326cb49568d10ff06e5f6e9b99d69048b": {
      "address": "0x06ff148019CE7F163f790b352B50bFC253fdDb6b",
      "txHash": "0x63b46d2f9a653675adade2b4b5454c0ae719989b177b5b6480fcee4561bb212b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6022_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5373_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:33"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6430_storage)",
            "src": "contracts\\registrar\\Registrar.sol:37"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:46"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:49"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:50"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)912",
            "src": "contracts\\registrar\\Registrar.sol:53"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:54"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6430_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6430_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)912": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6022_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6022_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5618_storage"
              }
            ]
          },
          "t_struct(Set)5618_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5373_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5044_storage"
              }
            ]
          },
          "t_struct(Map)5044_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5035_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5035_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5035_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "d2bb781a118453b183bdc774ee1b6ffeb79dd6cd025213293981c4105122b09b": {
      "address": "0x06ff148019CE7F163f790b352B50bFC253fdDb6b",
      "txHash": "0x9b67e65133292c1435cf1100bb46648d53a958c57ee7619cde52679b4d030bb3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6022_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5373_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:32"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6427_storage)",
            "src": "contracts\\registrar\\Registrar.sol:36"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:45"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:49"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)912",
            "src": "contracts\\registrar\\Registrar.sol:52"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6427_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6427_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)912": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6022_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6022_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5618_storage"
              }
            ]
          },
          "t_struct(Set)5618_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5373_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5044_storage"
              }
            ]
          },
          "t_struct(Map)5044_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5035_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5035_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5035_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "227cc8f2f403a184b9f8bebab1e7f7833c4727bccd8250b1007c802f0c6f1ec7": {
      "address": "0xCbFd6D4dd5E488FC27B9A95f384DF869811b0b43",
      "txHash": "0x0295c5cf2fa9524cbfa2e82c20b55acff0f7cb042f5672751b4776f10f0f6986",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6022_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5373_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6425_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)912",
            "src": "contracts\\registrar\\Registrar.sol:51"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:52"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6425_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6425_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)912": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6022_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6022_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5618_storage"
              }
            ]
          },
          "t_struct(Set)5618_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5373_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5044_storage"
              }
            ]
          },
          "t_struct(Map)5044_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5035_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5035_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5035_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "480727ce1398bfcd2dd3f03ae1e4f737b05ccfb334268904e08f176c2febe494": {
      "address": "0xfB8787e418744aA521e629039b6a40777Ce591a8",
      "txHash": "0x8719f76f0e6ccca53c094f0ba17218f099d6bb1cc567d096a18b88ee9c6bb4a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4240_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3591_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)4643_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)312",
            "src": "contracts\\registrar\\Registrar.sol:51"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:52"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)4643_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)4643_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)312": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)4240_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)4240_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3836_storage"
              }
            ]
          },
          "t_struct(Set)3836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3591_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3262_storage"
              }
            ]
          },
          "t_struct(Map)3262_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3253_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3253_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)3253_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "8389a5c3726015888f6ddb9194e748c03a4d5ae34fc80c94d8aee6f300970424": {
      "address": "0x55e5171EF66B3959B190f24504bcC88604F2626d",
      "txHash": "0x1b01b77ad0d5a418cd2b72cef082c1834d3e346225b61f0b91706c5249e89ae1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6022_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5373_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6425_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)912",
            "src": "contracts\\registrar\\Registrar.sol:51"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:52"
          },
          {
            "contract": "Registrar",
            "label": "gap",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6425_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6425_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)912": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6022_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6022_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5618_storage"
              }
            ]
          },
          "t_struct(Set)5618_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5373_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5044_storage"
              }
            ]
          },
          "t_struct(Map)5044_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5035_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5035_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5035_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "1b7476def5532d7e32afcd8023058b518bc3b0cbf69c739ec8630d4d6000a8f8": {
      "address": "0xD701eFAA444A489b92c479962C01FE7A2E013008",
      "txHash": "0x9bf94c3d52a7c86e9f90c5ce2986e07f422559a8e39b2c3d19e118807ff3f2bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\oz\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\oz\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\oz\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC20\\ERC20Upgradeable.sol:47"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC20\\ERC20Upgradeable.sol:48"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "contracts\\oz\\token\\ERC20\\ERC20Upgradeable.sol:49"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "contracts\\oz\\token\\ERC20\\ERC20Upgradeable.sol:393"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "02f1295d6ff210780fa76d505ec4634acf52e59ea3f1cc02a2ad8d2f5dda44e1": {
      "address": "0xcBE450259429D3B4119e115e43275a95bc84C996",
      "txHash": "0x6269fd80fde284635aef09187586522c339be3f6dd3b6e9ab12aab5d1f9656cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ZNSHub",
            "label": "authorizedRegistrars",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:57"
          },
          {
            "contract": "ZNSHub",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:60"
          },
          {
            "contract": "ZNSHub",
            "label": "defaultRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:63"
          },
          {
            "contract": "ZNSHub",
            "label": "domainToContract",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:66"
          },
          {
            "contract": "ZNSHub",
            "label": "subdomainRegistrars",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:68"
          },
          {
            "contract": "ZNSHub",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:71"
          },
          {
            "contract": "ZNSHub",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\ZNSHub.sol:73"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2f1026dd80932df3d817a5ddc2d7ab31a5817a2a91b9f6a6df055f0e585e8335": {
      "address": "0xF1Acc0cd9c76A86687b6F8D9E3E4DFF46233E2dA",
      "txHash": "0xe2bda211aca66810299df4c53e77d715bfe06fab52222c42c5c8b595e4036be6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ZNSHub",
            "label": "authorizedRegistrars",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:57"
          },
          {
            "contract": "ZNSHub",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\ZNSHub.sol:60"
          },
          {
            "contract": "ZNSHub",
            "label": "defaultRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:63"
          },
          {
            "contract": "ZNSHub",
            "label": "domainToContract",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:66"
          },
          {
            "contract": "ZNSHub",
            "label": "subdomainRegistrars",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\registrar\\ZNSHub.sol:69"
          },
          {
            "contract": "ZNSHub",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\ZNSHub.sol:72"
          },
          {
            "contract": "ZNSHub",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\ZNSHub.sol:74"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "98dc5b476c4028290af83d448d6c18c43217865794b5c33d0734e144f71816d7": {
      "address": "0x90db34a8673E32c0c1f2809C0f7A6fc7aED35F1B",
      "txHash": "0x1d2ef0fcf5ed076ef7324f92d82fb7ef9f99ff21d910ac0cc7f176e327371347",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)6022_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)5373_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)6425_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)912",
            "src": "contracts\\registrar\\Registrar.sol:51"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:52"
          },
          {
            "contract": "Registrar",
            "label": "gap",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)6425_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)6425_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)912": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)6022_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6022_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)5618_storage"
              }
            ]
          },
          "t_struct(Set)5618_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)5373_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)5044_storage"
              }
            ]
          },
          "t_struct(Map)5044_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)5035_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)5035_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)5035_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "56d2989361124e0a8b8dfb78476d828417ff0b0bc7786051aba348b2806fc0c0": {
      "address": "0x9cAb99BD8F2DF10671e8F44F996DC34E0D42659D",
      "txHash": "0xd9273f50880a6cf49ab0b28ab288db1cb288121979bcb889a29d76c16f7abe57",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\introspection\\ERC165Upgradeable.sol:66"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4240_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3591_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:62"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721Upgradeable.sol:612"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\utils\\PausableUpgradeable.sol:97"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\token\\ERC721\\ERC721PausableUpgradeable.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "controllers",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\registrar\\Registrar.sol:31"
          },
          {
            "contract": "Registrar",
            "label": "records",
            "type": "t_mapping(t_uint256,t_struct(DomainRecord)4643_storage)",
            "src": "contracts\\registrar\\Registrar.sol:35"
          },
          {
            "contract": "Registrar",
            "label": "beacon",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:44"
          },
          {
            "contract": "Registrar",
            "label": "rootDomainId",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:47"
          },
          {
            "contract": "Registrar",
            "label": "parentRegistrar",
            "type": "t_address",
            "src": "contracts\\registrar\\Registrar.sol:48"
          },
          {
            "contract": "Registrar",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)312",
            "src": "contracts\\registrar\\Registrar.sol:51"
          },
          {
            "contract": "Registrar",
            "label": "test",
            "type": "t_uint8",
            "src": "contracts\\registrar\\Registrar.sol:52"
          },
          {
            "contract": "Registrar",
            "label": "gap",
            "type": "t_uint256",
            "src": "contracts\\registrar\\Registrar.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(DomainRecord)4643_storage)": {
            "label": "mapping(uint256 => struct Registrar.DomainRecord)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(DomainRecord)4643_storage": {
            "label": "struct Registrar.DomainRecord",
            "members": [
              {
                "label": "minter",
                "type": "t_address"
              },
              {
                "label": "metadataLocked",
                "type": "t_bool"
              },
              {
                "label": "metadataLockedBy",
                "type": "t_address"
              },
              {
                "label": "controller",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              },
              {
                "label": "parentId",
                "type": "t_uint256"
              },
              {
                "label": "subdomainContract",
                "type": "t_address"
              }
            ]
          },
          "t_contract(IZNSHub)312": {
            "label": "contract IZNSHub"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_struct(UintSet)4240_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)4240_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3836_storage"
              }
            ]
          },
          "t_struct(Set)3836_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3591_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3262_storage"
              }
            ]
          },
          "t_struct(Map)3262_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3253_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3253_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)3253_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "80f6cb4d88b740ffc7f66ce443bc63ecde3c61b98e06c6386644efd05b0e108d": {
      "address": "0xF815aD31760fdFed81be4D4E894621075d679a34",
      "txHash": "0x6a9de85a2a126c6c7b3c2c312546b17fee5631f1a65f0696f7e512043f70f214",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts\\oz\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\utils\\ContextUpgradeable.sol:32"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts\\oz\\access\\OwnableUpgradeable.sol:79"
          },
          {
            "contract": "DomainPurchaser",
            "label": "paymentToken",
            "type": "t_contract(IERC20Upgradeable)3695",
            "src": "contracts\\controllers\\DomainPurchaser.sol:63"
          },
          {
            "contract": "DomainPurchaser",
            "label": "zNSHub",
            "type": "t_contract(IZNSHub)1692",
            "src": "contracts\\controllers\\DomainPurchaser.sol:66"
          },
          {
            "contract": "DomainPurchaser",
            "label": "platformWallet",
            "type": "t_address",
            "src": "contracts\\controllers\\DomainPurchaser.sol:69"
          },
          {
            "contract": "DomainPurchaser",
            "label": "platformFee",
            "type": "t_uint256",
            "src": "contracts\\controllers\\DomainPurchaser.sol:72"
          },
          {
            "contract": "DomainPurchaser",
            "label": "purchaseData",
            "type": "t_mapping(t_uint256,t_struct(DomainPurchaseData)287_storage)",
            "src": "contracts\\controllers\\DomainPurchaser.sol:75"
          },
          {
            "contract": "DomainPurchaser",
            "label": "allowMintingNonNetwork",
            "type": "t_bool",
            "src": "contracts\\controllers\\DomainPurchaser.sol:78"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)3695": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IZNSHub)1692": {
            "label": "contract IZNSHub"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(DomainPurchaseData)287_storage)": {
            "label": "mapping(uint256 => struct DomainPurchaser.DomainPurchaseData)"
          },
          "t_struct(DomainPurchaseData)287_storage": {
            "label": "struct DomainPurchaser.DomainPurchaseData",
            "members": [
              {
                "label": "subdomainMintingEnabled",
                "type": "t_bool"
              },
              {
                "label": "prices",
                "type": "t_struct(PricingData)1146_storage"
              },
              {
                "label": "allowSubdomainsToMint",
                "type": "t_bool"
              },
              {
                "label": "wasAllowedToSubdomainMintOnCreation",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(PricingData)1146_storage": {
            "label": "struct IDomainPurchaser.PricingData",
            "members": [
              {
                "label": "short",
                "type": "t_uint256"
              },
              {
                "label": "medium",
                "type": "t_uint256"
              },
              {
                "label": "long",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
