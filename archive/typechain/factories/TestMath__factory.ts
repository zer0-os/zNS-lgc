/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TestMath } from "../TestMath";

export class TestMath__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestMath> {
    return super.deploy(overrides || {}) as Promise<TestMath>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestMath {
    return super.attach(address) as TestMath;
  }
  connect(signer: Signer): TestMath__factory {
    return super.connect(signer) as TestMath__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestMath {
    return new Contract(address, _abi, signerOrProvider) as TestMath;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_scale",
        type: "uint256",
      },
    ],
    name: "accurateRatioTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_num",
        type: "uint256",
      },
    ],
    name: "floorSqrtTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_scale",
        type: "uint256",
      },
    ],
    name: "normalizedRatioTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_n",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_d",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_max",
        type: "uint256",
      },
    ],
    name: "reducedRatioTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_n",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_d",
        type: "uint256",
      },
    ],
    name: "roundDivTest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610385806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631ad36d0a1461005c57806347d0b6861461009e57806355bc07b6146100d357806371763d41146100fc578063904c433914610119575b600080fd5b6100856004803603606081101561007257600080fd5b5080359060208101359060400135610142565b6040805192835260208301919091528051918290030190f35b6100c1600480360360408110156100b457600080fd5b508035906020013561015d565b60408051918252519081900360200190f35b610085600480360360608110156100e957600080fd5b5080359060208101359060400135610170565b6100c16004803603602081101561011257600080fd5b503561017e565b6100856004803603606081101561012f57600080fd5b508035906020810135906040013561018f565b60008061015085858561019d565b915091505b935093915050565b600061016983836101cf565b9392505050565b6000806101508585856101fb565b600061018982610240565b92915050565b600080610150858585610296565b600080828511806101ad57508284115b156101c6576101bd8585856101fb565b91509150610155565b50929391925050565b60006002820482038284816101e057fe5b06816101e857fe5b048284816101f257fe5b04019392505050565b600080838514156102125750506002810480610155565b83851015610225576101bd858585610296565b600080610233868887610296565b9890975095505050505050565b6000806002830460010190506000600282858161025957fe5b0483018161026357fe5b0490505b8082111561028f57809150600282858161027d57fe5b0483018161028757fe5b049050610267565b5092915050565b600080600083600019816102a657fe5b049050808611156102df5760008160010187816102bf57fe5b0460010190508087816102ce57fe5b0496508086816102da57fe5b049550505b60006102f68786026102f18989610306565b6101cf565b9794889003965093945050505050565b600082820183811015610169576040805162461bcd60e51b815260206004820152600c60248201526b4552525f4f564552464c4f5760a01b604482015290519081900360640190fdfea2646970667358221220534fe687c14237b44ddb4e7f6cad972f9c58c650df90935f12d51490332b852164736f6c634300060c0033";
