{
  "id": "3b98cb5a-2339-4b38-bd4e-baf2d639654f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.6",
  "solcLongVersion": "0.7.6+commit.7338295f",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/LimitingRegistrar.sol": {
        "content": "pragma solidity ^0.7.6;\npragma experimental ABIEncoderV2;\n// ABIEncoderV2 only used for view functions\n\n/**\n * @title LimitingController\n * @dev Create and interact with Registries.\n */\n\nimport \"./IRegistrar.sol\";\nimport \"./IRegistry.sol\";\n\ncontract LimitingRegistrar {\n\n    struct DStore {\n        address owner;\n        mapping(uint256 => address) entries;\n        uint[] layerLimits;\n        IRegistry registry;\n    }\n\n    function dStore() internal view returns (DStore storage dStore) {\n        bytes32 slot = keccak256(\"zns.LimitingRegistrar\");\n        assembly {dStore.slot := slot}\n    }\n\n    // constructor(address _owner, address _registrar) public {\n    //     registrar = _registrar;\n    // }\n\n    function setLimits(uint256[] calldata limits) public {\n        DStore storage dstore = dStore();\n        // layerLimits.length = limits;\n        delete dstore.layerLimits;\n        for (uint i = 0; i < limits.length; i++) {\n            dstore.layerLimits.push(limits[i]);\n        }\n    }\n\n    function limitingRegister_canCreate(\n        uint256 tokenId,\n        address _controller,\n        address _owner\n    ) internal view returns (bool) {\n        DStore storage dstore = dStore();\n        uint256 depth = dstore.registry.getDepth(tokenId);\n        uint256 limit = dstore.layerLimits[depth];\n        if (limit == 0) {\n            // careful, this assumes all zero limits are infinite - the opposite!\n            // what solidity makes us do to minimize computation and data\n            return true;\n        }\n        IRegistrar subcontroller = IRegistrar(dstore.entries[tokenId]);\n        return\n            (_controller == address(this)) &&\n            (dstore.registry.getChildLength(tokenId) <= depth) &&\n            (address(subcontroller) == address(0) ||\n                subcontroller.canCreate(tokenId, _controller, _owner));\n    }\n}\n"
      },
      "contracts/IRegistrar.sol": {
        "content": "pragma solidity 0.7.6;\n\ninterface IRegistrar {\n    function canCreate(uint256 tokenId, address _owner, address _controller) external view returns (bool);\n    function setController() external view;\n    function setSubController() external view;\n}"
      },
      "contracts/IRegistry.sol": {
        "content": "pragma solidity ^0.7.6;\n\ninterface IRegistry {\n    function getChildLength(uint256) external view returns (uint256);\n\n    function getDepth(uint256) external view returns (uint256);\n}\n"
      },
      "contracts/Registrar.sol": {
        "content": "pragma solidity 0.7.6;\n\nimport \"./LimitingRegistrar.sol\";\n\ncontract Registrar is LimitingRegistrar {\n\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/IRegistrar.sol": {
        "IRegistrar": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_controller",
                  "type": "address"
                }
              ],
              "name": "canCreate",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "setController",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "setSubController",
              "outputs": [],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "canCreate(uint256,address,address)": "338bef0c",
              "setController()": "8b2704ec",
              "setSubController()": "bfac3dd8"
            }
          }
        }
      },
      "contracts/IRegistry.sol": {
        "IRegistry": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "getChildLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "getDepth",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getChildLength(uint256)": "593b844f",
              "getDepth(uint256)": "75e618c9"
            }
          }
        }
      },
      "contracts/LimitingRegistrar.sol": {
        "LimitingRegistrar": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "limits",
                  "type": "uint256[]"
                }
              ],
              "name": "setLimits",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101f6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635919ffb214610030575b600080fd5b61004a6004803603810190610045919061017b565b61004c565b005b60006100566100c6565b905080600201600061006891906100f3565b60005b838390508110156100c0578160020184848381811061008657fe5b905060200201359080600181540180825580915050600190039060005260206000200160009091909190915055808060010191505061006b565b50505050565b6000807f04aa27557c07e55a75592888f58fd511379f4b35607228cf5d91ebfbbcdef34f90508091505090565b50805460008255906000526020600020908101906101119190610114565b50565b5b8082111561012d576000816000905550600101610115565b5090565b60008083601f84011261014357600080fd5b8235905067ffffffffffffffff81111561015c57600080fd5b60208301915083602082028301111561017457600080fd5b9250929050565b6000806020838503121561018e57600080fd5b600083013567ffffffffffffffff8111156101a857600080fd5b6101b485828601610131565b9250925050925092905056fea264697066735822122037485bcbac7db82ef54e224d5fb3c710f20d6dbf7cd62c22976d3fec7f44d7c064736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5919FFB2 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x56 PUSH2 0xC6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x68 SWAP2 SWAP1 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xC0 JUMPI DUP2 PUSH1 0x2 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x86 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x4AA27557C07E55A75592888F58FD511379F4B35607228CF5D91EBFBBCDEF34F SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x115 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B4 DUP6 DUP3 DUP7 ADD PUSH2 0x131 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x48 JUMPDEST 0xCB 0xAC PUSH30 0xB82EF54E224D5FB3C710F20D6DBF7CD62C22976D3FEC7F44D7C064736F6C PUSH4 0x43000706 STOP CALLER ",
              "sourceMap": "241:1612:2:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:825:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "114:277:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "163:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "172:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "175:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "165:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "165:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "165:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "142:6:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "150:4:4",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "138:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "138:17:4"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "157:3:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "134:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "134:27:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "127:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "127:35:4"
                              },
                              "nodeType": "YulIf",
                              "src": "124:2:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "188:30:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "211:6:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "198:12:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "198:20:4"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "188:6:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "261:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "270:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "273:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "263:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "263:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "263:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "233:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "241:18:4",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:30:4"
                              },
                              "nodeType": "YulIf",
                              "src": "227:2:4"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "286:29:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "302:6:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "310:4:4",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "298:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "298:17:4"
                              },
                              "variableNames": [
                                {
                                  "name": "arrayPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "286:8:4"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "369:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "378:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "381:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "371:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "371:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "371:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "arrayPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "334:8:4"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "348:6:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "356:4:4",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nodeType": "YulIdentifier",
                                          "src": "344:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "344:17:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "330:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "330:32:4"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:3:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "327:2:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "327:41:4"
                              },
                              "nodeType": "YulIf",
                              "src": "324:2:4"
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "81:6:4",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "89:3:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulTypedName",
                            "src": "97:8:4",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "107:6:4",
                            "type": ""
                          }
                        ],
                        "src": "24:367:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "498:324:4",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "544:16:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "553:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "556:1:4",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "546:6:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "546:12:4"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "546:12:4"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "519:7:4"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "528:9:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "515:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "515:23:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "540:2:4",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "511:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "511:32:4"
                              },
                              "nodeType": "YulIf",
                              "src": "508:2:4"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "570:245:4",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "585:45:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "616:9:4"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "627:1:4",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "612:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "612:17:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "599:12:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "599:31:4"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "589:6:4",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "677:16:4",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "686:1:4",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "689:1:4",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "679:6:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "679:12:4"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "679:12:4"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "649:6:4"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "657:18:4",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "646:2:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "646:30:4"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "643:2:4"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "707:98:4",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "777:9:4"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "788:6:4"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "773:3:4"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "773:22:4"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "797:7:4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "725:47:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "725:80:4"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "707:6:4"
                                    },
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "715:6:4"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "460:9:4",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "471:7:4",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "483:6:4",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "491:6:4",
                            "type": ""
                          }
                        ],
                        "src": "397:425:4"
                      }
                    ]
                  },
                  "contents": "{\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0, value1 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
                  "id": 4,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80635919ffb214610030575b600080fd5b61004a6004803603810190610045919061017b565b61004c565b005b60006100566100c6565b905080600201600061006891906100f3565b60005b838390508110156100c0578160020184848381811061008657fe5b905060200201359080600181540180825580915050600190039060005260206000200160009091909190915055808060010191505061006b565b50505050565b6000807f04aa27557c07e55a75592888f58fd511379f4b35607228cf5d91ebfbbcdef34f90508091505090565b50805460008255906000526020600020908101906101119190610114565b50565b5b8082111561012d576000816000905550600101610115565b5090565b60008083601f84011261014357600080fd5b8235905067ffffffffffffffff81111561015c57600080fd5b60208301915083602082028301111561017457600080fd5b9250929050565b6000806020838503121561018e57600080fd5b600083013567ffffffffffffffff8111156101a857600080fd5b6101b485828601610131565b9250925050925092905056fea264697066735822122037485bcbac7db82ef54e224d5fb3c710f20d6dbf7cd62c22976d3fec7f44d7c064736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5919FFB2 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x56 PUSH2 0xC6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x68 SWAP2 SWAP1 PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0xC0 JUMPI DUP2 PUSH1 0x2 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x86 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x4AA27557C07E55A75592888F58FD511379F4B35607228CF5D91EBFBBCDEF34F SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x114 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x115 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B4 DUP6 DUP3 DUP7 ADD PUSH2 0x131 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0x48 JUMPDEST 0xCB 0xAC PUSH30 0xB82EF54E224D5FB3C710F20D6DBF7CD62C22976D3FEC7F44D7C064736F6C PUSH4 0x43000706 STOP CALLER ",
              "sourceMap": "241:1612:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;773:21;797:8;:6;:8::i;:::-;773:32;;862:6;:18;;;855:25;;;;:::i;:::-;895:6;890:100;911:6;;:13;;907:1;:17;890:100;;;945:6;:18;;969:6;;976:1;969:9;;;;;;;;;;;;;945:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:3;;;;;;;890:100;;;;710:286;;;:::o;426:169::-;467:21;500:12;515:34;500:49;;584:4;569:19;;568:21;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:367:4:-;;;157:3;150:4;142:6;138:17;134:27;124:2;;175:1;172;165:12;124:2;211:6;198:20;188:30;;241:18;233:6;230:30;227:2;;;273:1;270;263:12;227:2;310:4;302:6;298:17;286:29;;364:3;356:4;348:6;344:17;334:8;330:32;327:41;324:2;;;381:1;378;371:12;324:2;114:277;;;;;:::o;397:425::-;;;540:2;528:9;519:7;515:23;511:32;508:2;;;556:1;553;546:12;508:2;627:1;616:9;612:17;599:31;657:18;649:6;646:30;643:2;;;689:1;686;679:12;643:2;725:80;797:7;788:6;777:9;773:22;725:80;:::i;:::-;707:98;;;;570:245;498:324;;;;;:::o"
            },
            "methodIdentifiers": {
              "setLimits(uint256[])": "5919ffb2"
            }
          }
        }
      },
      "contracts/Registrar.sol": {
        "Registrar": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "limits",
                  "type": "uint256[]"
                }
              ],
              "name": "setLimits",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506101c4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635919ffb214610030575b600080fd5b6100a76004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184602083028401116401000000008311171561009757600080fd5b90919293919293905050506100a9565b005b60006100b3610123565b90508060020160006100c59190610150565b60005b8383905081101561011d57816002018484838181106100e357fe5b90506020020135908060018154018082558091505060019003906000526020600020016000909190919091505580806001019150506100c8565b50505050565b6000807f04aa27557c07e55a75592888f58fd511379f4b35607228cf5d91ebfbbcdef34f90508091505090565b508054600082559060005260206000209081019061016e9190610171565b50565b5b8082111561018a576000816000905550600101610172565b509056fea264697066735822122080300d42925070a4286f572daafb76cb7c690ec96670084af0400cd8529749a464736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5919FFB2 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xA9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB3 PUSH2 0x123 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x11D JUMPI DUP2 PUSH1 0x2 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xE3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x4AA27557C07E55A75592888F58FD511379F4B35607228CF5D91EBFBBCDEF34F SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x172 JUMP JUMPDEST POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 ADDRESS 0xD TIMESTAMP SWAP3 POP PUSH17 0xA4286F572DAAFB76CB7C690EC96670084A CREATE BLOCKHASH 0xC 0xD8 MSTORE SWAP8 0x49 LOG4 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "59:44:3:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80635919ffb214610030575b600080fd5b6100a76004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184602083028401116401000000008311171561009757600080fd5b90919293919293905050506100a9565b005b60006100b3610123565b90508060020160006100c59190610150565b60005b8383905081101561011d57816002018484838181106100e357fe5b90506020020135908060018154018082558091505060019003906000526020600020016000909190919091505580806001019150506100c8565b50505050565b6000807f04aa27557c07e55a75592888f58fd511379f4b35607228cf5d91ebfbbcdef34f90508091505090565b508054600082559060005260206000209081019061016e9190610171565b50565b5b8082111561018a576000816000905550600101610172565b509056fea264697066735822122080300d42925070a4286f572daafb76cb7c690ec96670084af0400cd8529749a464736f6c63430007060033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5919FFB2 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0xA9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB3 PUSH2 0x123 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x150 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x11D JUMPI DUP2 PUSH1 0x2 ADD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xE3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x4AA27557C07E55A75592888F58FD511379F4B35607228CF5D91EBFBBCDEF34F SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x171 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x172 JUMP JUMPDEST POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 ADDRESS 0xD TIMESTAMP SWAP3 POP PUSH17 0xA4286F572DAAFB76CB7C690EC96670084A CREATE BLOCKHASH 0xC 0xD8 MSTORE SWAP8 0x49 LOG4 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
              "sourceMap": "59:44:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:286:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;773:21;797:8;:6;:8::i;:::-;773:32;;862:6;:18;;;855:25;;;;:::i;:::-;895:6;890:100;911:6;;:13;;907:1;:17;890:100;;;945:6;:18;;969:6;;976:1;969:9;;;;;;;;;;;;;945:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:3;;;;;;;890:100;;;;710:286;;;:::o;426:169::-;467:21;500:12;515:34;500:49;;584:4;569:19;;568:21;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "setLimits(uint256[])": "5919ffb2"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/IRegistrar.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/IRegistrar.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/IRegistry.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/IRegistry.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/LimitingRegistrar.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/LimitingRegistrar.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/Registrar.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/Registrar.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2519",
        "formattedMessage": "contracts/LimitingRegistrar.sol:22:46: Warning: This declaration shadows an existing declaration.\n    function dStore() internal view returns (DStore storage dStore) {\n                                             ^-------------------^\ncontracts/LimitingRegistrar.sol:22:5: The shadowed declaration is here:\n    function dStore() internal view returns (DStore storage dStore) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
        "message": "This declaration shadows an existing declaration.",
        "secondarySourceLocations": [
          {
            "end": 595,
            "file": "contracts/LimitingRegistrar.sol",
            "message": "The shadowed declaration is here:",
            "start": 426
          }
        ],
        "severity": "warning",
        "sourceLocation": {
          "end": 488,
          "file": "contracts/LimitingRegistrar.sol",
          "start": 467
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "contracts/LimitingRegistrar.sol:22:5: Warning: Function state mutability can be restricted to pure\n    function dStore() internal view returns (DStore storage dStore) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 595,
          "file": "contracts/LimitingRegistrar.sol",
          "start": 426
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/IRegistrar.sol": {
        "ast": {
          "absolutePath": "contracts/IRegistrar.sol",
          "exportedSymbols": {
            "IRegistrar": [
              19
            ]
          },
          "id": 20,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:22:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 19,
              "linearizedBaseContracts": [
                19
              ],
              "name": "IRegistrar",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "338bef0c",
                  "id": 12,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canCreate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "70:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "70:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "87:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "87:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "_controller",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "103:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "103:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "69:54:0"
                  },
                  "returnParameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "147:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 9,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "147:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "146:6:0"
                  },
                  "scope": 19,
                  "src": "51:102:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "8b2704ec",
                  "id": 15,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "180:2:0"
                  },
                  "returnParameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "196:0:0"
                  },
                  "scope": 19,
                  "src": "158:39:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bfac3dd8",
                  "id": 18,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSubController",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "227:2:0"
                  },
                  "returnParameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:0:0"
                  },
                  "scope": 19,
                  "src": "202:42:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 20,
              "src": "24:222:0"
            }
          ],
          "src": "0:246:0"
        },
        "id": 0
      },
      "contracts/IRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/IRegistry.sol",
          "exportedSymbols": {
            "IRegistry": [
              36
            ]
          },
          "id": 37,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 21,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 36,
              "linearizedBaseContracts": [
                36
              ],
              "name": "IRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "593b844f",
                  "id": 28,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getChildLength",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "75:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "75:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "74:9:1"
                  },
                  "returnParameters": {
                    "id": 27,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "107:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "107:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "106:9:1"
                  },
                  "scope": 36,
                  "src": "51:65:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "75e618c9",
                  "id": 35,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getDepth",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 30,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "140:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "139:9:1"
                  },
                  "returnParameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "172:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:9:1"
                  },
                  "scope": 36,
                  "src": "122:59:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 37,
              "src": "25:158:1"
            }
          ],
          "src": "0:184:1"
        },
        "id": 1
      },
      "contracts/LimitingRegistrar.sol": {
        "ast": {
          "absolutePath": "contracts/LimitingRegistrar.sol",
          "exportedSymbols": {
            "IRegistrar": [
              19
            ],
            "IRegistry": [
              36
            ],
            "LimitingRegistrar": [
              189
            ]
          },
          "id": 190,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 38,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:2"
            },
            {
              "id": 39,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "24:33:2"
            },
            {
              "absolutePath": "contracts/IRegistrar.sol",
              "file": "./IRegistrar.sol",
              "id": 40,
              "nodeType": "ImportDirective",
              "scope": 190,
              "sourceUnit": 20,
              "src": "187:26:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IRegistry.sol",
              "file": "./IRegistry.sol",
              "id": 41,
              "nodeType": "ImportDirective",
              "scope": 190,
              "sourceUnit": 37,
              "src": "214:25:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "LimitingRegistrar",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "LimitingRegistrar.DStore",
                  "id": 53,
                  "members": [
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "299:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "299:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 47,
                      "mutability": "mutable",
                      "name": "entries",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "322:35:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      },
                      "typeName": {
                        "id": 46,
                        "keyType": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "330:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "322:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        },
                        "valueType": {
                          "id": 45,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "341:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 50,
                      "mutability": "mutable",
                      "name": "layerLimits",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "367:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "367:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 49,
                        "nodeType": "ArrayTypeName",
                        "src": "367:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "395:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistry_$36",
                        "typeString": "contract IRegistry"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "IRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 36,
                        "src": "395:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRegistry_$36",
                          "typeString": "contract IRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "DStore",
                  "nodeType": "StructDefinition",
                  "scope": 189,
                  "src": "275:145:2",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 65,
                    "nodeType": "Block",
                    "src": "490:105:2",
                    "statements": [
                      {
                        "assignments": [
                          59
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 59,
                            "mutability": "mutable",
                            "name": "slot",
                            "nodeType": "VariableDeclaration",
                            "scope": 65,
                            "src": "500:12:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 58,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "500:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 63,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "7a6e732e4c696d6974696e67526567697374726172",
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "525:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_04aa27557c07e55a75592888f58fd511379f4b35607228cf5d91ebfbbcdef34f",
                                "typeString": "literal_string \"zns.LimitingRegistrar\""
                              },
                              "value": "zns.LimitingRegistrar"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_04aa27557c07e55a75592888f58fd511379f4b35607228cf5d91ebfbbcdef34f",
                                "typeString": "literal_string \"zns.LimitingRegistrar\""
                              }
                            ],
                            "id": 60,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967288,
                            "src": "515:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "515:34:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "500:49:2"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "568:21:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "569:19:2",
                              "value": {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "584:4:2"
                              },
                              "variableNames": [
                                {
                                  "name": "dStore.slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "569:11:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 56,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "569:11:2",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 59,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "584:4:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 64,
                        "nodeType": "InlineAssembly",
                        "src": "559:30:2"
                      }
                    ]
                  },
                  "id": 66,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "dStore",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "441:2:2"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "dStore",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "467:21:2",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                          "typeString": "struct LimitingRegistrar.DStore"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "DStore",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 53,
                          "src": "467:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                            "typeString": "struct LimitingRegistrar.DStore"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "466:23:2"
                  },
                  "scope": 189,
                  "src": "426:169:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 104,
                    "nodeType": "Block",
                    "src": "763:233:2",
                    "statements": [
                      {
                        "assignments": [
                          73
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 73,
                            "mutability": "mutable",
                            "name": "dstore",
                            "nodeType": "VariableDeclaration",
                            "scope": 104,
                            "src": "773:21:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                              "typeString": "struct LimitingRegistrar.DStore"
                            },
                            "typeName": {
                              "id": 72,
                              "name": "DStore",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 53,
                              "src": "773:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                "typeString": "struct LimitingRegistrar.DStore"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 76,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 74,
                            "name": "dStore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "797:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_DStore_$53_storage_ptr_$",
                              "typeString": "function () view returns (struct LimitingRegistrar.DStore storage pointer)"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "797:8:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                            "typeString": "struct LimitingRegistrar.DStore storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "773:32:2"
                      },
                      {
                        "expression": {
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "855:25:2",
                          "subExpression": {
                            "expression": {
                              "id": 77,
                              "name": "dstore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "862:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                "typeString": "struct LimitingRegistrar.DStore storage pointer"
                              }
                            },
                            "id": 78,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "layerLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "862:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "855:25:2"
                      },
                      {
                        "body": {
                          "id": 102,
                          "nodeType": "Block",
                          "src": "931:59:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 97,
                                      "name": "limits",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 69,
                                      "src": "969:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 99,
                                    "indexExpression": {
                                      "id": 98,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82,
                                      "src": "976:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "969:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 92,
                                      "name": "dstore",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 73,
                                      "src": "945:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                        "typeString": "struct LimitingRegistrar.DStore storage pointer"
                                      }
                                    },
                                    "id": 95,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "layerLimits",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 50,
                                    "src": "945:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 96,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "945:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "945:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 101,
                              "nodeType": "ExpressionStatement",
                              "src": "945:34:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82,
                            "src": "907:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 86,
                              "name": "limits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "911:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "911:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "907:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 103,
                        "initializationExpression": {
                          "assignments": [
                            82
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 82,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 103,
                              "src": "895:6:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 81,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "895:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 84,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "904:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "895:10:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 90,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "926:3:2",
                            "subExpression": {
                              "id": 89,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82,
                              "src": "926:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 91,
                          "nodeType": "ExpressionStatement",
                          "src": "926:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "890:100:2"
                      }
                    ]
                  },
                  "functionSelector": "5919ffb2",
                  "id": 105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setLimits",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "limits",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "729:25:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 67,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "729:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 68,
                          "nodeType": "ArrayTypeName",
                          "src": "729:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "728:27:2"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "763:0:2"
                  },
                  "scope": 189,
                  "src": "710:286:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "1151:700:2",
                    "statements": [
                      {
                        "assignments": [
                          117
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 117,
                            "mutability": "mutable",
                            "name": "dstore",
                            "nodeType": "VariableDeclaration",
                            "scope": 187,
                            "src": "1161:21:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                              "typeString": "struct LimitingRegistrar.DStore"
                            },
                            "typeName": {
                              "id": 116,
                              "name": "DStore",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 53,
                              "src": "1161:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                "typeString": "struct LimitingRegistrar.DStore"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 120,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 118,
                            "name": "dStore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "1185:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_DStore_$53_storage_ptr_$",
                              "typeString": "function () view returns (struct LimitingRegistrar.DStore storage pointer)"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1185:8:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                            "typeString": "struct LimitingRegistrar.DStore storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1161:32:2"
                      },
                      {
                        "assignments": [
                          122
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 122,
                            "mutability": "mutable",
                            "name": "depth",
                            "nodeType": "VariableDeclaration",
                            "scope": 187,
                            "src": "1203:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 121,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1203:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 128,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 126,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "1244:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 123,
                                "name": "dstore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 117,
                                "src": "1219:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                  "typeString": "struct LimitingRegistrar.DStore storage pointer"
                                }
                              },
                              "id": 124,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "registry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52,
                              "src": "1219:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistry_$36",
                                "typeString": "contract IRegistry"
                              }
                            },
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getDepth",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "1219:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1219:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1203:49:2"
                      },
                      {
                        "assignments": [
                          130
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 130,
                            "mutability": "mutable",
                            "name": "limit",
                            "nodeType": "VariableDeclaration",
                            "scope": 187,
                            "src": "1262:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 129,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1262:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 131,
                              "name": "dstore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "1278:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                "typeString": "struct LimitingRegistrar.DStore storage pointer"
                              }
                            },
                            "id": 132,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "layerLimits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "1278:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 134,
                          "indexExpression": {
                            "id": 133,
                            "name": "depth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "1297:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1278:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1262:41:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 136,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "1317:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1326:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1317:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 142,
                        "nodeType": "IfStatement",
                        "src": "1313:208:2",
                        "trueBody": {
                          "id": 141,
                          "nodeType": "Block",
                          "src": "1329:192:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1506:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 115,
                              "id": 140,
                              "nodeType": "Return",
                              "src": "1499:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          144
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 144,
                            "mutability": "mutable",
                            "name": "subcontroller",
                            "nodeType": "VariableDeclaration",
                            "scope": 187,
                            "src": "1530:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRegistrar_$19",
                              "typeString": "contract IRegistrar"
                            },
                            "typeName": {
                              "id": 143,
                              "name": "IRegistrar",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 19,
                              "src": "1530:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistrar_$19",
                                "typeString": "contract IRegistrar"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 151,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 146,
                                  "name": "dstore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 117,
                                  "src": "1568:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                    "typeString": "struct LimitingRegistrar.DStore storage pointer"
                                  }
                                },
                                "id": 147,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "entries",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47,
                                "src": "1568:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 149,
                              "indexExpression": {
                                "id": 148,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "1583:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1568:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 145,
                            "name": "IRegistrar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "1557:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IRegistrar_$19_$",
                              "typeString": "type(contract IRegistrar)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1557:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRegistrar_$19",
                            "typeString": "contract IRegistrar"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1530:62:2"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 152,
                                    "name": "_controller",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 109,
                                    "src": "1622:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 155,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "1645:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_LimitingRegistrar_$189",
                                          "typeString": "contract LimitingRegistrar"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_LimitingRegistrar_$189",
                                          "typeString": "contract LimitingRegistrar"
                                        }
                                      ],
                                      "id": 154,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1637:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 153,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1637:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 156,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1637:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1622:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 158,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1621:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 162,
                                        "name": "tokenId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 107,
                                        "src": "1699:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 159,
                                          "name": "dstore",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 117,
                                          "src": "1668:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_DStore_$53_storage_ptr",
                                            "typeString": "struct LimitingRegistrar.DStore storage pointer"
                                          }
                                        },
                                        "id": 160,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "registry",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 52,
                                        "src": "1668:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IRegistry_$36",
                                          "typeString": "contract IRegistry"
                                        }
                                      },
                                      "id": 161,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getChildLength",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 28,
                                      "src": "1668:30:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) view external returns (uint256)"
                                      }
                                    },
                                    "id": 163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1668:39:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 164,
                                    "name": "depth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 122,
                                    "src": "1711:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1668:48:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 166,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1667:50:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1621:96:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 176,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 170,
                                        "name": "subcontroller",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 144,
                                        "src": "1742:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IRegistrar_$19",
                                          "typeString": "contract IRegistrar"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IRegistrar_$19",
                                          "typeString": "contract IRegistrar"
                                        }
                                      ],
                                      "id": 169,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1734:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 168,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1734:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1734:22:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 174,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1768:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 173,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1760:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 172,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1760:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1760:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "src": "1734:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 179,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "1814:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 180,
                                      "name": "_controller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 109,
                                      "src": "1823:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 181,
                                      "name": "_owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 111,
                                      "src": "1836:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 177,
                                      "name": "subcontroller",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 144,
                                      "src": "1790:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IRegistrar_$19",
                                        "typeString": "contract IRegistrar"
                                      }
                                    },
                                    "id": 178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "canCreate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 12,
                                    "src": "1790:23:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$_t_address_$returns$_t_bool_$",
                                      "typeString": "function (uint256,address,address) view external returns (bool)"
                                    }
                                  },
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1790:53:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1734:109:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 184,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1733:111:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1621:223:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 115,
                        "id": 186,
                        "nodeType": "Return",
                        "src": "1602:242:2"
                      }
                    ]
                  },
                  "id": 188,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "limitingRegister_canCreate",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1047:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1047:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "_controller",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1072:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1072:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1101:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1101:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1037:84:2"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1145:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1145:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1144:6:2"
                  },
                  "scope": 189,
                  "src": "1002:849:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 190,
              "src": "241:1612:2"
            }
          ],
          "src": "0:1854:2"
        },
        "id": 2
      },
      "contracts/Registrar.sol": {
        "ast": {
          "absolutePath": "contracts/Registrar.sol",
          "exportedSymbols": {
            "IRegistrar": [
              19
            ],
            "IRegistry": [
              36
            ],
            "LimitingRegistrar": [
              189
            ],
            "Registrar": [
              195
            ]
          },
          "id": 196,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 191,
              "literals": [
                "solidity",
                "0.7",
                ".6"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:22:3"
            },
            {
              "absolutePath": "contracts/LimitingRegistrar.sol",
              "file": "./LimitingRegistrar.sol",
              "id": 192,
              "nodeType": "ImportDirective",
              "scope": 196,
              "sourceUnit": 190,
              "src": "24:33:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 193,
                    "name": "LimitingRegistrar",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 189,
                    "src": "81:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LimitingRegistrar_$189",
                      "typeString": "contract LimitingRegistrar"
                    }
                  },
                  "id": 194,
                  "nodeType": "InheritanceSpecifier",
                  "src": "81:17:3"
                }
              ],
              "contractDependencies": [
                189
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 195,
              "linearizedBaseContracts": [
                195,
                189
              ],
              "name": "Registrar",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 196,
              "src": "59:44:3"
            }
          ],
          "src": "0:103:3"
        },
        "id": 3
      }
    }
  }
}
