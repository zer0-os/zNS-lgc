/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IConverterFactoryInterface extends ethers.utils.Interface {
  functions: {
    "createAnchor(uint16,string,string,uint8)": FunctionFragment;
    "createConverter(uint16,address,address,uint32)": FunctionFragment;
    "customFactories(uint16)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createAnchor",
    values: [BigNumberish, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createConverter",
    values: [BigNumberish, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "customFactories",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "createAnchor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createConverter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "customFactories",
    data: BytesLike
  ): Result;

  events: {};
}

export class IConverterFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IConverterFactoryInterface;

  functions: {
    createAnchor(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createAnchor(uint16,string,string,uint8)"(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createConverter(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createConverter(uint16,address,address,uint32)"(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    customFactories(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "customFactories(uint16)"(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  createAnchor(
    _type: BigNumberish,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createAnchor(uint16,string,string,uint8)"(
    _type: BigNumberish,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createConverter(
    _type: BigNumberish,
    _anchor: string,
    _registry: string,
    _maxConversionFee: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createConverter(uint16,address,address,uint32)"(
    _type: BigNumberish,
    _anchor: string,
    _registry: string,
    _maxConversionFee: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  customFactories(
    _type: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "customFactories(uint16)"(
    _type: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    createAnchor(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "createAnchor(uint16,string,string,uint8)"(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    createConverter(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "createConverter(uint16,address,address,uint32)"(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    customFactories(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "customFactories(uint16)"(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    createAnchor(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createAnchor(uint16,string,string,uint8)"(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    createConverter(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createConverter(uint16,address,address,uint32)"(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    customFactories(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "customFactories(uint16)"(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createAnchor(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createAnchor(uint16,string,string,uint8)"(
      _type: BigNumberish,
      _name: string,
      _symbol: string,
      _decimals: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createConverter(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createConverter(uint16,address,address,uint32)"(
      _type: BigNumberish,
      _anchor: string,
      _registry: string,
      _maxConversionFee: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    customFactories(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "customFactories(uint16)"(
      _type: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
