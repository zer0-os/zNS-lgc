/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IConverterRegistryInterface extends ethers.utils.Interface {
  functions: {
    "getAnchor(uint256)": FunctionFragment;
    "getAnchorCount()": FunctionFragment;
    "getAnchors()": FunctionFragment;
    "getConvertibleToken(uint256)": FunctionFragment;
    "getConvertibleTokenAnchor(address,uint256)": FunctionFragment;
    "getConvertibleTokenAnchorCount(address)": FunctionFragment;
    "getConvertibleTokenAnchors(address)": FunctionFragment;
    "getConvertibleTokenCount()": FunctionFragment;
    "getConvertibleTokens()": FunctionFragment;
    "getLiquidityPool(uint256)": FunctionFragment;
    "getLiquidityPoolCount()": FunctionFragment;
    "getLiquidityPools()": FunctionFragment;
    "isAnchor(address)": FunctionFragment;
    "isConvertibleToken(address)": FunctionFragment;
    "isConvertibleTokenAnchor(address,address)": FunctionFragment;
    "isLiquidityPool(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAnchor",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAnchorCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAnchors",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getConvertibleToken",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getConvertibleTokenAnchor",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getConvertibleTokenAnchorCount",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getConvertibleTokenAnchors",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getConvertibleTokenCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getConvertibleTokens",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLiquidityPool",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLiquidityPoolCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLiquidityPools",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "isAnchor", values: [string]): string;
  encodeFunctionData(
    functionFragment: "isConvertibleToken",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isConvertibleTokenAnchor",
    values: [string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "isLiquidityPool",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "getAnchor", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAnchorCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getAnchors", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getConvertibleToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConvertibleTokenAnchor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConvertibleTokenAnchorCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConvertibleTokenAnchors",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConvertibleTokenCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getConvertibleTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLiquidityPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLiquidityPoolCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLiquidityPools",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isAnchor", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isConvertibleToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isConvertibleTokenAnchor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isLiquidityPool",
    data: BytesLike
  ): Result;

  events: {};
}

export class IConverterRegistry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IConverterRegistryInterface;

  functions: {
    getAnchor(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getAnchor(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getAnchorCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getAnchorCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getAnchors(overrides?: CallOverrides): Promise<[string[]]>;

    "getAnchors()"(overrides?: CallOverrides): Promise<[string[]]>;

    getConvertibleToken(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getConvertibleToken(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getConvertibleTokenAnchor(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getConvertibleTokenAnchor(address,uint256)"(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getConvertibleTokenAnchorCount(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getConvertibleTokenAnchorCount(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getConvertibleTokenAnchors(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "getConvertibleTokenAnchors(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getConvertibleTokenCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getConvertibleTokenCount()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getConvertibleTokens(overrides?: CallOverrides): Promise<[string[]]>;

    "getConvertibleTokens()"(overrides?: CallOverrides): Promise<[string[]]>;

    getLiquidityPool(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getLiquidityPool(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getLiquidityPoolCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getLiquidityPoolCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getLiquidityPools(overrides?: CallOverrides): Promise<[string[]]>;

    "getLiquidityPools()"(overrides?: CallOverrides): Promise<[string[]]>;

    isAnchor(_value: string, overrides?: CallOverrides): Promise<[boolean]>;

    "isAnchor(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isConvertibleToken(
      _value: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isConvertibleToken(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isConvertibleTokenAnchor(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isConvertibleTokenAnchor(address,address)"(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isLiquidityPool(
      _value: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isLiquidityPool(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  getAnchor(_index: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "getAnchor(uint256)"(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getAnchorCount(overrides?: CallOverrides): Promise<BigNumber>;

  "getAnchorCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  getAnchors(overrides?: CallOverrides): Promise<string[]>;

  "getAnchors()"(overrides?: CallOverrides): Promise<string[]>;

  getConvertibleToken(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getConvertibleToken(uint256)"(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getConvertibleTokenAnchor(
    _convertibleToken: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getConvertibleTokenAnchor(address,uint256)"(
    _convertibleToken: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getConvertibleTokenAnchorCount(
    _convertibleToken: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getConvertibleTokenAnchorCount(address)"(
    _convertibleToken: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getConvertibleTokenAnchors(
    _convertibleToken: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getConvertibleTokenAnchors(address)"(
    _convertibleToken: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getConvertibleTokenCount(overrides?: CallOverrides): Promise<BigNumber>;

  "getConvertibleTokenCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  getConvertibleTokens(overrides?: CallOverrides): Promise<string[]>;

  "getConvertibleTokens()"(overrides?: CallOverrides): Promise<string[]>;

  getLiquidityPool(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getLiquidityPool(uint256)"(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getLiquidityPoolCount(overrides?: CallOverrides): Promise<BigNumber>;

  "getLiquidityPoolCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  getLiquidityPools(overrides?: CallOverrides): Promise<string[]>;

  "getLiquidityPools()"(overrides?: CallOverrides): Promise<string[]>;

  isAnchor(_value: string, overrides?: CallOverrides): Promise<boolean>;

  "isAnchor(address)"(
    _value: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isConvertibleToken(
    _value: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isConvertibleToken(address)"(
    _value: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isConvertibleTokenAnchor(
    _convertibleToken: string,
    _value: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isConvertibleTokenAnchor(address,address)"(
    _convertibleToken: string,
    _value: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isLiquidityPool(_value: string, overrides?: CallOverrides): Promise<boolean>;

  "isLiquidityPool(address)"(
    _value: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    getAnchor(_index: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "getAnchor(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getAnchorCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getAnchorCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAnchors(overrides?: CallOverrides): Promise<string[]>;

    "getAnchors()"(overrides?: CallOverrides): Promise<string[]>;

    getConvertibleToken(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getConvertibleToken(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getConvertibleTokenAnchor(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getConvertibleTokenAnchor(address,uint256)"(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getConvertibleTokenAnchorCount(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConvertibleTokenAnchorCount(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConvertibleTokenAnchors(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getConvertibleTokenAnchors(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getConvertibleTokenCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getConvertibleTokenCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getConvertibleTokens(overrides?: CallOverrides): Promise<string[]>;

    "getConvertibleTokens()"(overrides?: CallOverrides): Promise<string[]>;

    getLiquidityPool(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getLiquidityPool(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getLiquidityPoolCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getLiquidityPoolCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLiquidityPools(overrides?: CallOverrides): Promise<string[]>;

    "getLiquidityPools()"(overrides?: CallOverrides): Promise<string[]>;

    isAnchor(_value: string, overrides?: CallOverrides): Promise<boolean>;

    "isAnchor(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isConvertibleToken(
      _value: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isConvertibleToken(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isConvertibleTokenAnchor(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isConvertibleTokenAnchor(address,address)"(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isLiquidityPool(
      _value: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isLiquidityPool(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    getAnchor(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAnchor(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAnchorCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getAnchorCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAnchors(overrides?: CallOverrides): Promise<BigNumber>;

    "getAnchors()"(overrides?: CallOverrides): Promise<BigNumber>;

    getConvertibleToken(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConvertibleToken(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConvertibleTokenAnchor(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConvertibleTokenAnchor(address,uint256)"(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConvertibleTokenAnchorCount(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConvertibleTokenAnchorCount(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConvertibleTokenAnchors(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getConvertibleTokenAnchors(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getConvertibleTokenCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getConvertibleTokenCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getConvertibleTokens(overrides?: CallOverrides): Promise<BigNumber>;

    "getConvertibleTokens()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLiquidityPool(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLiquidityPool(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLiquidityPoolCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getLiquidityPoolCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLiquidityPools(overrides?: CallOverrides): Promise<BigNumber>;

    "getLiquidityPools()"(overrides?: CallOverrides): Promise<BigNumber>;

    isAnchor(_value: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isAnchor(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isConvertibleToken(
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isConvertibleToken(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isConvertibleTokenAnchor(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isConvertibleTokenAnchor(address,address)"(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isLiquidityPool(
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isLiquidityPool(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAnchor(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAnchor(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAnchorCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAnchorCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAnchors(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAnchors()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getConvertibleToken(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConvertibleToken(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConvertibleTokenAnchor(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConvertibleTokenAnchor(address,uint256)"(
      _convertibleToken: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConvertibleTokenAnchorCount(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConvertibleTokenAnchorCount(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConvertibleTokenAnchors(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConvertibleTokenAnchors(address)"(
      _convertibleToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConvertibleTokenCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConvertibleTokenCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getConvertibleTokens(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getConvertibleTokens()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLiquidityPool(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLiquidityPool(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLiquidityPoolCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLiquidityPoolCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLiquidityPools(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLiquidityPools()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isAnchor(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAnchor(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isConvertibleToken(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isConvertibleToken(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isConvertibleTokenAnchor(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isConvertibleTokenAnchor(address,address)"(
      _convertibleToken: string,
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isLiquidityPool(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isLiquidityPool(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
