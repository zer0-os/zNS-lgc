/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface RegistryInterface extends ethers.utils.Interface {
  functions: {
    "ROOT_ID()": FunctionFragment;
    "approve(address,uint256)": FunctionFragment;
    "balanceOf(address)": FunctionFragment;
    "baseURI()": FunctionFragment;
    "canCreate(address,uint256)": FunctionFragment;
    "controllerOf(uint256)": FunctionFragment;
    "createDomain(string,address,address,string,string)": FunctionFragment;
    "entries(uint256)": FunctionFragment;
    "getApproved(uint256)": FunctionFragment;
    "getChildLength(uint256)": FunctionFragment;
    "getDepth(uint256)": FunctionFragment;
    "getId(string[])": FunctionFragment;
    "getOwner(string[])": FunctionFragment;
    "isApprovedForAll(address,address)": FunctionFragment;
    "name()": FunctionFragment;
    "ownerOf(uint256)": FunctionFragment;
    "safeTransferFrom(address,address,uint256)": FunctionFragment;
    "setApprovalForAll(address,bool)": FunctionFragment;
    "setController(uint256,address)": FunctionFragment;
    "setImage(uint256,string)": FunctionFragment;
    "setResolver(uint256,string)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "symbol()": FunctionFragment;
    "tokenByIndex(uint256)": FunctionFragment;
    "tokenOfOwnerByIndex(address,uint256)": FunctionFragment;
    "tokenURI(uint256)": FunctionFragment;
    "totalSupply()": FunctionFragment;
    "transferFrom(address,address,uint256)": FunctionFragment;
    "validateDomain(string)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "ROOT_ID", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "balanceOf", values: [string]): string;
  encodeFunctionData(functionFragment: "baseURI", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "canCreate",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "controllerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createDomain",
    values: [string, string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "entries",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getApproved",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getChildLength",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDepth",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getId", values: [string[]]): string;
  encodeFunctionData(functionFragment: "getOwner", values: [string[]]): string;
  encodeFunctionData(
    functionFragment: "isApprovedForAll",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "name", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setApprovalForAll",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setController",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setImage",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setResolver",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "symbol", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tokenByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenOfOwnerByIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalSupply",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "validateDomain",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "ROOT_ID", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "baseURI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "canCreate", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "controllerOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createDomain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "entries", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getApproved",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getChildLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getDepth", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getOwner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isApprovedForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "name", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setApprovalForAll",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setController",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setImage", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setResolver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenOfOwnerByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalSupply",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "validateDomain",
    data: BytesLike
  ): Result;

  events: {
    "Approval(address,address,uint256)": EventFragment;
    "ApprovalForAll(address,address,bool)": EventFragment;
    "ControllerSet(uint256,address,address,address)": EventFragment;
    "DomainCreated(uint256,uint256,string,address,address,string,string)": EventFragment;
    "ImageSet(address,uint256,string)": EventFragment;
    "ResolverSet(address,uint256,string)": EventFragment;
    "Transfer(address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Approval"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ControllerSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DomainCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ImageSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ResolverSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Transfer"): EventFragment;
}

export class Registry extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: RegistryInterface;

  functions: {
    ROOT_ID(overrides?: CallOverrides): Promise<[BigNumber]>;

    "ROOT_ID()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    baseURI(overrides?: CallOverrides): Promise<[string]>;

    "baseURI()"(overrides?: CallOverrides): Promise<[string]>;

    canCreate(
      creator: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "canCreate(address,uint256)"(
      creator: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    controllerOf(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "controllerOf(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    createDomain(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createDomain(string,address,address,string,string)"(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    entries(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          BigNumber,
          BigNumber,
          string,
          string,
          string,
          string,
          BigNumber[]
        ] & {
          owner: string;
          parent: BigNumber;
          depth: BigNumber;
          controller: string;
          resolver: string;
          image: string;
          domain: string;
          children: BigNumber[];
        }
      ] & {
        out: [
          string,
          BigNumber,
          BigNumber,
          string,
          string,
          string,
          string,
          BigNumber[]
        ] & {
          owner: string;
          parent: BigNumber;
          depth: BigNumber;
          controller: string;
          resolver: string;
          image: string;
          domain: string;
          children: BigNumber[];
        };
      }
    >;

    "entries(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          BigNumber,
          BigNumber,
          string,
          string,
          string,
          string,
          BigNumber[]
        ] & {
          owner: string;
          parent: BigNumber;
          depth: BigNumber;
          controller: string;
          resolver: string;
          image: string;
          domain: string;
          children: BigNumber[];
        }
      ] & {
        out: [
          string,
          BigNumber,
          BigNumber,
          string,
          string,
          string,
          string,
          BigNumber[]
        ] & {
          owner: string;
          parent: BigNumber;
          depth: BigNumber;
          controller: string;
          resolver: string;
          image: string;
          domain: string;
          children: BigNumber[];
        };
      }
    >;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getChildLength(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getChildLength(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDepth(id: BigNumberish, overrides?: CallOverrides): Promise<[BigNumber]>;

    "getDepth(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getId(path: string[], overrides?: CallOverrides): Promise<[BigNumber]>;

    "getId(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getOwner(path: string[], overrides?: CallOverrides): Promise<[string]>;

    "getOwner(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<[string]>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    name(overrides?: CallOverrides): Promise<[string]>;

    "name()"(overrides?: CallOverrides): Promise<[string]>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setController(
      id: BigNumberish,
      controller: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setController(uint256,address)"(
      id: BigNumberish,
      controller: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setImage(
      id: BigNumberish,
      image: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setImage(uint256,string)"(
      id: BigNumberish,
      image: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setResolver(
      id: BigNumberish,
      resolver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setResolver(uint256,string)"(
      id: BigNumberish,
      resolver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    symbol(overrides?: CallOverrides): Promise<[string]>;

    "symbol()"(overrides?: CallOverrides): Promise<[string]>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    tokenURI(
      token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { out: string }>;

    "tokenURI(uint256)"(
      token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { out: string }>;

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    "totalSupply()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    validateDomain(
      _s: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, string] & {
        valid: boolean;
        parent: BigNumber;
        id: BigNumber;
        domain: string;
      }
    >;

    "validateDomain(string)"(
      _s: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, string] & {
        valid: boolean;
        parent: BigNumber;
        id: BigNumber;
        domain: string;
      }
    >;
  };

  ROOT_ID(overrides?: CallOverrides): Promise<BigNumber>;

  "ROOT_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

  approve(
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "approve(address,uint256)"(
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "balanceOf(address)"(
    owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  baseURI(overrides?: CallOverrides): Promise<string>;

  "baseURI()"(overrides?: CallOverrides): Promise<string>;

  canCreate(
    creator: string,
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "canCreate(address,uint256)"(
    creator: string,
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  controllerOf(id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "controllerOf(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  createDomain(
    domain: string,
    _owner: string,
    _controller: string,
    resolver: string,
    image: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createDomain(string,address,address,string,string)"(
    domain: string,
    _owner: string,
    _controller: string,
    resolver: string,
    image: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  entries(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      BigNumber,
      BigNumber,
      string,
      string,
      string,
      string,
      BigNumber[]
    ] & {
      owner: string;
      parent: BigNumber;
      depth: BigNumber;
      controller: string;
      resolver: string;
      image: string;
      domain: string;
      children: BigNumber[];
    }
  >;

  "entries(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      BigNumber,
      BigNumber,
      string,
      string,
      string,
      string,
      BigNumber[]
    ] & {
      owner: string;
      parent: BigNumber;
      depth: BigNumber;
      controller: string;
      resolver: string;
      image: string;
      domain: string;
      children: BigNumber[];
    }
  >;

  getApproved(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getApproved(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getChildLength(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getChildLength(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDepth(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "getDepth(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getId(path: string[], overrides?: CallOverrides): Promise<BigNumber>;

  "getId(string[])"(
    path: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getOwner(path: string[], overrides?: CallOverrides): Promise<string>;

  "getOwner(string[])"(
    path: string[],
    overrides?: CallOverrides
  ): Promise<string>;

  isApprovedForAll(
    owner: string,
    operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isApprovedForAll(address,address)"(
    owner: string,
    operator: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  name(overrides?: CallOverrides): Promise<string>;

  "name()"(overrides?: CallOverrides): Promise<string>;

  ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "ownerOf(uint256)"(
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "safeTransferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "safeTransferFrom(address,address,uint256,bytes)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setApprovalForAll(
    operator: string,
    approved: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setApprovalForAll(address,bool)"(
    operator: string,
    approved: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setController(
    id: BigNumberish,
    controller: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setController(uint256,address)"(
    id: BigNumberish,
    controller: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setImage(
    id: BigNumberish,
    image: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setImage(uint256,string)"(
    id: BigNumberish,
    image: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setResolver(
    id: BigNumberish,
    resolver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setResolver(uint256,string)"(
    id: BigNumberish,
    resolver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  symbol(overrides?: CallOverrides): Promise<string>;

  "symbol()"(overrides?: CallOverrides): Promise<string>;

  tokenByIndex(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenByIndex(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenOfOwnerByIndex(
    owner: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenOfOwnerByIndex(address,uint256)"(
    owner: string,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenURI(token: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "tokenURI(uint256)"(
    token: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  transferFrom(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferFrom(address,address,uint256)"(
    from: string,
    to: string,
    tokenId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  validateDomain(
    _s: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber, string] & {
      valid: boolean;
      parent: BigNumber;
      id: BigNumber;
      domain: string;
    }
  >;

  "validateDomain(string)"(
    _s: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber, string] & {
      valid: boolean;
      parent: BigNumber;
      id: BigNumber;
      domain: string;
    }
  >;

  callStatic: {
    ROOT_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "ROOT_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    baseURI(overrides?: CallOverrides): Promise<string>;

    "baseURI()"(overrides?: CallOverrides): Promise<string>;

    canCreate(
      creator: string,
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "canCreate(address,uint256)"(
      creator: string,
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    controllerOf(id: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "controllerOf(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    createDomain(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "createDomain(string,address,address,string,string)"(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: CallOverrides
    ): Promise<void>;

    entries(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        BigNumber,
        BigNumber,
        string,
        string,
        string,
        string,
        BigNumber[]
      ] & {
        owner: string;
        parent: BigNumber;
        depth: BigNumber;
        controller: string;
        resolver: string;
        image: string;
        domain: string;
        children: BigNumber[];
      }
    >;

    "entries(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        BigNumber,
        BigNumber,
        string,
        string,
        string,
        string,
        BigNumber[]
      ] & {
        owner: string;
        parent: BigNumber;
        depth: BigNumber;
        controller: string;
        resolver: string;
        image: string;
        domain: string;
        children: BigNumber[];
      }
    >;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getChildLength(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getChildLength(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDepth(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "getDepth(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getId(path: string[], overrides?: CallOverrides): Promise<BigNumber>;

    "getId(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwner(path: string[], overrides?: CallOverrides): Promise<string>;

    "getOwner(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<string>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    name(overrides?: CallOverrides): Promise<string>;

    "name()"(overrides?: CallOverrides): Promise<string>;

    ownerOf(tokenId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setController(
      id: BigNumberish,
      controller: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setController(uint256,address)"(
      id: BigNumberish,
      controller: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setImage(
      id: BigNumberish,
      image: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setImage(uint256,string)"(
      id: BigNumberish,
      image: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setResolver(
      id: BigNumberish,
      resolver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setResolver(uint256,string)"(
      id: BigNumberish,
      resolver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    symbol(overrides?: CallOverrides): Promise<string>;

    "symbol()"(overrides?: CallOverrides): Promise<string>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(token: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "tokenURI(uint256)"(
      token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    validateDomain(
      _s: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, string] & {
        valid: boolean;
        parent: BigNumber;
        id: BigNumber;
        domain: string;
      }
    >;

    "validateDomain(string)"(
      _s: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber, string] & {
        valid: boolean;
        parent: BigNumber;
        id: BigNumber;
        domain: string;
      }
    >;
  };

  filters: {
    Approval(
      owner: string | null,
      approved: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;

    ApprovalForAll(
      owner: string | null,
      operator: string | null,
      approved: null
    ): EventFilter;

    ControllerSet(
      id: BigNumberish | null,
      oldController: string | null,
      newController: string | null,
      sender: null
    ): EventFilter;

    DomainCreated(
      parentId: BigNumberish | null,
      tokenId: null,
      domain: null,
      owner: null,
      controller: null,
      resolver: null,
      image: null
    ): EventFilter;

    ImageSet(
      owner: string | null,
      id: BigNumberish | null,
      image: null
    ): EventFilter;

    ResolverSet(
      owner: string | null,
      id: BigNumberish | null,
      resolver: null
    ): EventFilter;

    Transfer(
      from: string | null,
      to: string | null,
      tokenId: BigNumberish | null
    ): EventFilter;
  };

  estimateGas: {
    ROOT_ID(overrides?: CallOverrides): Promise<BigNumber>;

    "ROOT_ID()"(overrides?: CallOverrides): Promise<BigNumber>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    baseURI(overrides?: CallOverrides): Promise<BigNumber>;

    "baseURI()"(overrides?: CallOverrides): Promise<BigNumber>;

    canCreate(
      creator: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "canCreate(address,uint256)"(
      creator: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    controllerOf(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "controllerOf(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    createDomain(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createDomain(string,address,address,string,string)"(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    entries(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "entries(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getChildLength(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getChildLength(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDepth(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "getDepth(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getId(path: string[], overrides?: CallOverrides): Promise<BigNumber>;

    "getId(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwner(path: string[], overrides?: CallOverrides): Promise<BigNumber>;

    "getOwner(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    "name()"(overrides?: CallOverrides): Promise<BigNumber>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setController(
      id: BigNumberish,
      controller: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setController(uint256,address)"(
      id: BigNumberish,
      controller: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setImage(
      id: BigNumberish,
      image: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setImage(uint256,string)"(
      id: BigNumberish,
      image: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setResolver(
      id: BigNumberish,
      resolver: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setResolver(uint256,string)"(
      id: BigNumberish,
      resolver: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    "symbol()"(overrides?: CallOverrides): Promise<BigNumber>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenURI(uint256)"(
      token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "totalSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    validateDomain(_s: string, overrides?: CallOverrides): Promise<BigNumber>;

    "validateDomain(string)"(
      _s: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    ROOT_ID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "ROOT_ID()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    approve(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "approve(address,uint256)"(
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address)"(
      owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    baseURI(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "baseURI()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    canCreate(
      creator: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "canCreate(address,uint256)"(
      creator: string,
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    controllerOf(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "controllerOf(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createDomain(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createDomain(string,address,address,string,string)"(
      domain: string,
      _owner: string,
      _controller: string,
      resolver: string,
      image: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    entries(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "entries(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getApproved(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getApproved(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getChildLength(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getChildLength(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDepth(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDepth(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getId(
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getId(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwner(
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOwner(string[])"(
      path: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isApprovedForAll(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isApprovedForAll(address,address)"(
      owner: string,
      operator: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    ownerOf(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ownerOf(uint256)"(
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "safeTransferFrom(address,address,uint256,bytes)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setApprovalForAll(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setApprovalForAll(address,bool)"(
      operator: string,
      approved: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setController(
      id: BigNumberish,
      controller: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setController(uint256,address)"(
      id: BigNumberish,
      controller: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setImage(
      id: BigNumberish,
      image: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setImage(uint256,string)"(
      id: BigNumberish,
      image: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setResolver(
      id: BigNumberish,
      resolver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setResolver(uint256,string)"(
      id: BigNumberish,
      resolver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "symbol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tokenByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenByIndex(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenOfOwnerByIndex(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenOfOwnerByIndex(address,uint256)"(
      owner: string,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenURI(uint256)"(
      token: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferFrom(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferFrom(address,address,uint256)"(
      from: string,
      to: string,
      tokenId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    validateDomain(
      _s: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "validateDomain(string)"(
      _s: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
