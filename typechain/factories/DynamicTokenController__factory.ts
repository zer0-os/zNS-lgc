/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DynamicTokenController } from "../DynamicTokenController";

export class DynamicTokenController__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DynamicTokenController> {
    return super.deploy(overrides || {}) as Promise<DynamicTokenController>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DynamicTokenController {
    return super.attach(address) as DynamicTokenController;
  }
  connect(signer: Signer): DynamicTokenController__factory {
    return super.connect(signer) as DynamicTokenController__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DynamicTokenController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DynamicTokenController;
  }
}

const _abi = [
  {
    inputs: [],
    name: "DSTokenImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DynamicConverterImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bancorRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "converters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dsImpl",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dconvImpl",
        type: "address",
      },
      {
        internalType: "contract StakingController",
        name: "_stakingController",
        type: "address",
      },
      {
        internalType: "contract Registry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bancorRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onSetZnsController",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingController",
    outputs: [
      {
        internalType: "contract StakingController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610db4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806360a6e23a116100765780637b1039991161005b5780637b1039991461016057806386b519e214610168578063b276331714610170576100a3565b806360a6e23a1461013b578063713e6a0914610158576100a3565b80630f4f8184146100a85780631459457a146100cc5780634f64b2be14610116578063533228d114610133575b600080fd5b6100b061026b565b604080516001600160a01b039092168252519081900360200190f35b610114600480360360a08110156100e257600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101358216916080909101351661027a565b005b6100b06004803603602081101561012c57600080fd5b503561039d565b6100b06103b8565b6100b06004803603602081101561015157600080fd5b50356103c7565b6100b06103e2565b6100b06103f1565b6100b0610400565b6102366004803603608081101561018657600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460018302840111640100000000831117156101f557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061040f945050505050565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b6005546001600160a01b031681565b600054610100900460ff16806102935750610293610b98565b806102a1575060005460ff16155b6102f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610d51602e913960400191505060405180910390fd5b600054610100900460ff16158015610321576000805460ff1961ff0019909116610100171660011790555b600380546001600160a01b038089167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255600780548684169083161790556004805488841690831617905560058054928516929091169190911790558015610395576000805461ff00191690555b505050505050565b6001602052600090815260409020546001600160a01b031681565b6004546001600160a01b031681565b6002602052600090815260409020546001600160a01b031681565b6006546001600160a01b031681565b6007546001600160a01b031681565b6003546001600160a01b031681565b60008060008060008060008060008980602001905161010081101561043357600080fd5b815160208301516040808501516060860151608087015160a088015160c0890180519551979996989497939692959194830192918464010000000082111561047a57600080fd5b90830190602082018581111561048f57600080fd5b82516401000000008111828201881017156104a957600080fd5b82525081516020918201929091019080838360005b838110156104d65781810151838201526020016104be565b50505050905090810190601f1680156105035780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561052657600080fd5b90830190602082018581111561053b57600080fd5b825164010000000081118282018810171561055557600080fd5b82525081516020918201929091019080838360005b8381101561058257818101518382015260200161056a565b50505050905090810190601f1680156105af5780820380516001836020036101000a031916815260200191505b50604052505050975097509750975097509750975097506000600360009054906101000a90046001600160a01b03166040516105ea90610b9e565b6001600160a01b03909116815260405190819003602001906000f080158015610617573d6000803e3d6000fd5b509050806001600160a01b0316631624f6c6848460126040518463ffffffff1660e01b8152600401808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b8381101561068357818101518382015260200161066b565b50505050905090810190601f1680156106b05780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156106e35781810151838201526020016106cb565b50505050905090810190601f1680156107105780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561073257600080fd5b505af1158015610746573d6000803e3d6000fd5b5050600454604051600093506001600160a01b03909116915061076890610b9e565b6001600160a01b03909116815260405190819003602001906000f080158015610795573d6000803e3d6000fd5b50600554604080517f6ecf2b220000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301529283166024820152600060448201819052915193945091841692636ecf2b2292606480820193929182900301818387803b15801561080d57600080fd5b505af1158015610821573d6000803e3d6000fd5b50505050806001600160a01b0316636a49d2c48b8b6040518363ffffffff1660e01b815260040180836001600160a01b031681526020018263ffffffff16815260200192505050600060405180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b50505050806001600160a01b031663ad161582896040518263ffffffff1660e01b8152600401808263ffffffff168152602001915050600060405180830381600087803b1580156108e657600080fd5b505af11580156108fa573d6000803e3d6000fd5b50505050806001600160a01b031663c3e8dfa8886040518263ffffffff1660e01b8152600401808263ffffffff168152602001915050600060405180830381600087803b15801561094a57600080fd5b505af115801561095e573d6000803e3d6000fd5b50505050806001600160a01b031663c9be579b876040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156109a857600080fd5b505af11580156109bc573d6000803e3d6000fd5b5050505080600260008f815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600160008f815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600760009054906101000a90046001600160a01b03166001600160a01b031663fa23b5b08e600660009054906101000a90046001600160a01b0316858960405160200180836001600160a01b03168152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b815260040180848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610afd578181015183820152602001610ae5565b50505050905090810190601f168015610b2a5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b158015610b4b57600080fd5b505af1158015610b5f573d6000803e3d6000fd5b507fb2763317000000000000000000000000000000000000000000000000000000009d5050505050505050505050505050949350505050565b303b1590565b6101a580610bac8339019056fe608060405234801561001057600080fd5b506040516101a53803806101a58339818101604052602081101561003357600080fd5b505161003e81610044565b506100bc565b610057816100b660201b6100211760201c565b6100925760405162461bcd60e51b815260040180806020018281038252603681526020018061016f6036913960400191505060405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b3b151590565b60a5806100ca6000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6027565b604c565b565b3b151590565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b3660008037600080366000845af43d6000803e808015606a573d6000f35b3d6000fdfea264697066735822122097a18eb396a946ced07de592f299522104c19ce573641f08b09534f7d30cc18164736f6c634300070600335570677261646561626c6550726f78793a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212205a17866291ccc9407d82a92177216ad299839280a000c78f149015dcc86f3ecd64736f6c63430007060033";
