/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC20TokenProxyable } from "../ERC20TokenProxyable";

export class ERC20TokenProxyable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC20TokenProxyable> {
    return super.deploy(overrides || {}) as Promise<ERC20TokenProxyable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20TokenProxyable {
    return super.attach(address) as ERC20TokenProxyable;
  }
  connect(signer: Signer): ERC20TokenProxyable__factory {
    return super.connect(signer) as ERC20TokenProxyable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20TokenProxyable {
    return new Contract(address, _abi, signerOrProvider) as ERC20TokenProxyable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610abf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b411461034b578063a9059cbb14610353578063dd62ed3e1461037f576100be565b8063313ce5671461030757806370a0823114610325576100be565b806318160ddd116100a757806318160ddd1461018057806323b872dd1461019a578063253279ad146101d0576100be565b806306fdde03146100c3578063095ea7b314610140575b600080fd5b6100cb6103ad565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101055781810151838201526020016100ed565b50505050905090810190601f1680156101325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61016c6004803603604081101561015657600080fd5b506001600160a01b03813516906020013561043a565b604080519115158252519081900360200190f35b6101886104ae565b60408051918252519081900360200190f35b61016c600480360360608110156101b057600080fd5b506001600160a01b038135811691602081013590911690604001356104b4565b610305600480360360808110156101e657600080fd5b81019060208101813564010000000081111561020157600080fd5b82018360208201111561021357600080fd5b8035906020019184600183028401116401000000008311171561023557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561028857600080fd5b82018360208201111561029a57600080fd5b803590602001918460018302840111640100000000831117156102bc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff83351693505050602001356105c5565b005b61030f610765565b6040805160ff9092168252519081900360200190f35b6101886004803603602081101561033b57600080fd5b50356001600160a01b031661076e565b6100cb610780565b61016c6004803603604081101561036957600080fd5b506001600160a01b0381351690602001356107d8565b6101886004803603604081101561039557600080fd5b506001600160a01b0381358116916020013516610889565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104325780601f1061040757610100808354040283529160200191610432565b820191906000526020600020905b81548152906001019060200180831161041557829003601f168201915b505050505081565b600082610446816108a6565b3360008181526006602090815260408083206001600160a01b03891680855290835292819020879055805187815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60045481565b6000836104c0816108a6565b836104ca816108a6565b6001600160a01b03861660009081526006602090815260408083203384529091529020546104f89085610904565b6001600160a01b0387166000818152600660209081526040808320338452825280832094909455918152600590915220546105339085610904565b6001600160a01b0380881660009081526005602052604080822093909355908716815220546105629085610961565b6001600160a01b0380871660008181526005602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b600054610100900460ff16806105de57506105de6109c2565b806105ec575060005460ff16155b6106275760405162461bcd60e51b815260040180806020018281038252602e815260200180610a5c602e913960400191505060405180910390fd5b600054610100900460ff16158015610652576000805460ff1961ff0019909116610100171660011790555b60008551116106a8576040805162461bcd60e51b815260206004820152601060248201527f4552525f494e56414c49445f4e414d4500000000000000000000000000000000604482015290519081900360640190fd5b60008451116106fe576040805162461bcd60e51b815260206004820152601260248201527f4552525f494e56414c49445f53594d424f4c0000000000000000000000000000604482015290519081900360640190fd5b84516107119060019060208801906109c8565b5083516107259060029060208701906109c8565b506003805460ff191660ff85161790556004829055336000908152600560205260409020829055801561075e576000805461ff00191690555b5050505050565b60035460ff1681565b60056020526000908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104325780601f1061040757610100808354040283529160200191610432565b6000826107e4816108a6565b336000908152600560205260409020546107fe9084610904565b33600090815260056020526040808220929092556001600160a01b0386168152205461082a9084610961565b6001600160a01b0385166000818152600560209081526040918290209390935580518681529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35060019392505050565b600660209081526000928352604080842090915290825290205481565b6001600160a01b038116610901576040805162461bcd60e51b815260206004820152601360248201527f4552525f494e56414c49445f4144445245535300000000000000000000000000604482015290519081900360640190fd5b50565b60008183101561095b576040805162461bcd60e51b815260206004820152600d60248201527f4552525f554e444552464c4f5700000000000000000000000000000000000000604482015290519081900360640190fd5b50900390565b6000828201838110156109bb576040805162461bcd60e51b815260206004820152600c60248201527f4552525f4f564552464c4f570000000000000000000000000000000000000000604482015290519081900360640190fd5b9392505050565b303b1590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a0957805160ff1916838001178555610a36565b82800160010185558215610a36579182015b82811115610a36578251825591602001919060010190610a1b565b50610a42929150610a46565b5090565b5b80821115610a425760008155600101610a4756fe496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a26469706673582212200dbcdfce52d74ed5478bc1a152b44e3eed76b610c1f82dbc0fcc5b3e8994eab164736f6c634300060c0033";
