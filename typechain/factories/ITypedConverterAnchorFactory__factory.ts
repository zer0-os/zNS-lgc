/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import type { ITypedConverterAnchorFactory } from "../ITypedConverterAnchorFactory";

export class ITypedConverterAnchorFactory__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITypedConverterAnchorFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ITypedConverterAnchorFactory;
  }
}

const _abi = [
  {
    inputs: [],
    name: "converterType",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "createAnchor",
    outputs: [
      {
        internalType: "contract IConverterAnchor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];
