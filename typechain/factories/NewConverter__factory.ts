/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { NewConverter } from "../NewConverter";

export class NewConverter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _amount: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides
  ): Promise<NewConverter> {
    return super.deploy(
      _amount,
      _fee,
      overrides || {}
    ) as Promise<NewConverter>;
  }
  getDeployTransaction(
    _amount: BigNumberish,
    _fee: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_amount, _fee, overrides || {});
  }
  attach(address: string): NewConverter {
    return super.attach(address) as NewConverter;
  }
  connect(signer: Signer): NewConverter__factory {
    return super.connect(signer) as NewConverter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NewConverter {
    return new Contract(address, _abi, signerOrProvider) as NewConverter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Token",
        name: "_sourceToken",
        type: "address",
      },
      {
        internalType: "contract IERC20Token",
        name: "_targetToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "getReturn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161011d38038061011d8339818101604052604081101561003357600080fd5b50805160209091015160009190915560015560ca806100536000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80631e1401f814602d575b600080fd5b606d60048036036060811015604157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356086565b6040805192835260208301919091528051918290030190f35b60005460015493509391505056fea26469706673582212208355a9b1c7a00769e3b6699c2fed3788166173a7b9d1aca961b6ac24089ead4164736f6c634300060c0033";
