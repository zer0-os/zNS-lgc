/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { StakingController } from "../StakingController";

export class StakingController__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<StakingController> {
    return super.deploy(overrides || {}) as Promise<StakingController>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingController {
    return super.attach(address) as StakingController;
  }
  connect(signer: Signer): StakingController__factory {
    return super.connect(signer) as StakingController__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingController {
    return new Contract(address, _abi, signerOrProvider) as StakingController;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "controllerData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "lockableProperties",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct StakingController.CreateData",
        name: "createData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "string",
        name: "proposal",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "Bid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "BidAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "BidClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
    ],
    name: "MinBidSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
    ],
    name: "StakeTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
    ],
    name: "Unbid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
    ],
    name: "acceptBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bancorNetwork",
    outputs: [
      {
        internalType: "contract IBancorNetwork",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "controllerData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "lockableProperties",
            type: "string",
          },
        ],
        internalType: "struct StakingController.CreateData",
        name: "createData",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "proposal",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "controllerData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "lockableProperties",
            type: "string",
          },
        ],
        internalType: "struct StakingController.CreateData",
        name: "createData",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "proposal",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOut",
            type: "uint256",
          },
        ],
        internalType: "struct StakingController.BancorSwapData",
        name: "swapData",
        type: "tuple",
      },
    ],
    name: "bidByPath",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "controllerData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "lockableProperties",
            type: "string",
          },
        ],
        internalType: "struct StakingController.CreateData",
        name: "createData",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "proposal",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "bidFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "controllerData",
            type: "bytes",
          },
          {
            internalType: "string",
            name: "lockableProperties",
            type: "string",
          },
        ],
        internalType: "struct StakingController.CreateData",
        name: "createData",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "proposal",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "path",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minOut",
            type: "uint256",
          },
        ],
        internalType: "struct StakingController.BancorSwapData",
        name: "swapData",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "bidForByPath",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "lockableProperties",
        type: "string",
      },
    ],
    name: "claimBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "configOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minBid",
            type: "uint256",
          },
        ],
        internalType: "struct StakingController.DomainConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
    ],
    name: "configureDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ZNSRegistry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "contract IBancorRegistry",
        name: "_bancor",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldController",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onSetZnsController",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "controllerData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "lockableProperties",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "transferData",
        type: "bytes",
      },
    ],
    name: "safeClaimBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
    ],
    name: "setMinBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "stakeOf",
    outputs: [
      {
        components: [
          {
            internalType: "enum StakingController.StakeStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "parentId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "createHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "stakeToken",
            type: "address",
          },
        ],
        internalType: "struct StakingController.Stake",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "parentId",
        type: "uint256",
      },
    ],
    name: "unbid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061292b806100206000396000f3fe6080604052600436106100e85760003560e01c8063a4edb25e1161008a578063ddaea25411610059578063ddaea2541461024d578063e13a40f01461026d578063ed87169c1461028d578063edc2ee4e146102ba576100e8565b8063a4edb25e146101b5578063b187d843146101e0578063b276331714610200578063ca76e6af1461022d576100e8565b8063748be75c116100c6578063748be75c1461013557806395c182521461015557806398d1f430146101755780639b84309b14610195576100e8565b806304a7c32f146100ed578063485cc955146101025780634bab577614610122575b600080fd5b6101006100fb366004612132565b6102e7565b005b34801561010e57600080fd5b5061010061011d366004611ed7565b610302565b610100610130366004612202565b6103e7565b34801561014157600080fd5b50610100610150366004612041565b6109e1565b34801561016157600080fd5b50610100610170366004611f3f565b610c7a565b34801561018157600080fd5b506101006101903660046122e2565b610de1565b3480156101a157600080fd5b506101006101b0366004612463565b610df2565b3480156101c157600080fd5b506101ca610ea8565b6040516101d791906124ae565b60405180910390f35b3480156101ec57600080fd5b506101006101fb366004611f76565b610f2c565b34801561020c57600080fd5b5061022061021b366004611d94565b611190565b6040516101d791906125f0565b34801561023957600080fd5b50610100610248366004612463565b6111f8565b34801561025957600080fd5b50610100610268366004612398565b611305565b34801561027957600080fd5b50610100610288366004611e83565b611661565b34801561029957600080fd5b506102ad6102a8366004611e58565b6117af565b6040516101d791906126c5565b3480156102c657600080fd5b506102da6102d5366004611f0f565b611856565b6040516101d791906126a5565b6102f88888888888888888336103e7565b5050505050505050565b600054610100900460ff168061031b575061031b611894565b80610329575060005460ff16155b6103645760405162461bcd60e51b815260040180806020018281038252602e81526020018061289e602e913960400191505060405180910390fd5b600054610100900460ff1615801561038f576000805460ff1961ff0019909116610100171660011790555b6000805462010000600160b01b031916620100006001600160a01b038681169190910291909117909155600180546001600160a01b03191691841691909117905580156103e2576000805461ff00191690555b505050565b60006103f3838061278e565b60016103ff868061278e565b90500381811061040b57fe5b90506020020160208101906104209190611d2f565b60008054604051631e43c35560e31b8152929350909182916201000090046001600160a01b03169063f21e1aa890610460908f908f908f90600401612719565b60206040518083038186803b15801561047857600080fd5b505afa15801561048c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b09190611f27565b600054604051634f558e7960e01b81529192506201000090046001600160a01b031690634f558e79906104e7908490600401612710565b60206040518083038186803b1580156104ff57600080fd5b505afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190611eb7565b1561054157600080fd5b306001600160a01b0316600060029054906101000a90046001600160a01b03166001600160a01b0316635dd8f6aa8e6040518263ffffffff1660e01b815260040161058c9190612710565b60206040518083038186803b1580156105a457600080fd5b505afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190611d4b565b6001600160a01b0316146105ef57600080fd5b60008c815260036020526040902080546001600160a01b0385811691161461061657600080fd5b6000858360405160200161062b9291906124c2565b60408051601f1981840301815291815281516020928301206000818152600290935290822090925090815460ff16600381111561066457fe5b1461066e57600080fd5b805460ff1916600190811782558301546040890135101561068e57600080fd5b805460ff191660011781556004810180546001600160a01b0388166001600160a01b03199091161790558b6106c38c806127d5565b6106d060208f018f6127d5565b6040516020016106e4959493929190612533565b60408051601f1981840301815291905280516020909101206003820155600181018f90556000610714898061278e565b600081811061071f57fe5b90506020020160208101906107349190611d2f565b90506001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610815578860200135341461076b57600080fd5b610773610ea8565b6001600160a01b031663b77d239b3461078c8c8061278e565b8d602001358e60400135306000806040518963ffffffff1660e01b81526004016107bc9796959493929190612577565b6020604051808303818588803b1580156107d557600080fd5b505af11580156107e9573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061080e9190611f27565b9550610965565b341561082057600080fd5b602089013561083a6001600160a01b0383163330846118a5565b6000610844610ea8565b60405163095ea7b360e01b81529091506001600160a01b0384169063095ea7b39061087590849086906004016124c2565b602060405180830381600087803b15801561088f57600080fd5b505af11580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c79190611eb7565b506001600160a01b03811663b77d239b6108e18d8061278e565b858f6040013560008060006040518863ffffffff1660e01b815260040161090e9796959493929190612577565b602060405180830381600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109609190611f27565b975050505b471561097057600080fd5b85826002018190555050505050508a886001600160a01b0316846001600160a01b03167fc913c510ad629b5dffaa2ed188b974db06964c1420ccb1638a840abc8b30d3cd8d8d8c8c8c896040516109cc96959493929190612605565b60405180910390a45050505050505050505050565b8415806109f257506109f2876118ff565b6109fb57600080fd5b801580610a0c5750610a0c886118ff565b610a1557600080fd5b6000805460405163880aeba360e01b8152620100009091046001600160a01b03169063880aeba390610a57908f908f908f9030908f908f908f9060040161273c565b602060405180830381600087803b158015610a7157600080fd5b505af1158015610a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa99190611f27565b90506000600260003384604051602001610ac49291906124c2565b60408051601f1981840301815291815281516020928301208352908201929092520160002090506002815460ff166003811115610afd57fe5b14610b0757600080fd5b8888888888604051602001610b20959493929190612533565b60405160208183030381529060405280519060200120816003015414610b4557600080fd5b600054604051633973654760e01b8152620100009091046001600160a01b031690633973654790610b7e9085908a908a90600401612719565b600060405180830381600087803b158015610b9857600080fd5b505af1158015610bac573d6000803e3d6000fd5b5050600054604051635c46a7ef60e11b8152620100009091046001600160a01b0316925063b88d4fde9150610bed9030908e9087908a908a906004016124ff565b600060405180830381600087803b158015610c0757600080fd5b505af1158015610c1b573d6000803e3d6000fd5b50505050886001600160a01b0316828b6001600160a01b03167fccb570a5507370ad990f0f6091a4b750d2265609fa24e591b68a9483f1fcea9633604051610c6391906124ae565b60405180910390a450505050505050505050505050565b600054604051632eec7b5560e11b815230916201000090046001600160a01b031690635dd8f6aa90610cb0908790600401612710565b60206040518083038186803b158015610cc857600080fd5b505afa158015610cdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d009190611d4b565b6001600160a01b031614610d1357600080fd5b6000546040516331a9108f60e11b815233916201000090046001600160a01b031690636352211e90610d49908790600401612710565b60206040518083038186803b158015610d6157600080fd5b505afa158015610d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d999190611d4b565b6001600160a01b031614610dac57600080fd5b600083815260036020526040902080546001600160a01b031615610dcf57600080fd5b610ddb81858585611905565b50505050565b6102f8888888888888888833611305565b6000546040516331a9108f60e11b815233916201000090046001600160a01b031690636352211e90610e28908690600401612710565b60206040518083038186803b158015610e4057600080fd5b505afa158015610e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e789190611d4b565b6001600160a01b031614610e8b57600080fd5b6000828152600360205260409020610ea490838361195f565b5050565b600154604051632ecd14d360e21b81526000916001600160a01b03169063bb34534c90610ed79060040161268c565b60206040518083038186803b158015610eef57600080fd5b505afa158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190611d4b565b905090565b821580610f3d5750610f3d856118ff565b610f4657600080fd5b6000805460405163880aeba360e01b8152620100009091046001600160a01b03169063880aeba390610f88908d908d908d9030908d908d908d9060040161273c565b602060405180830381600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fda9190611f27565b90506000600260003384604051602001610ff59291906124c2565b60408051601f1981840301815291815281516020928301208352908201929092520160002090506002815460ff16600381111561102e57fe5b1461103857600080fd5b8686868686604051602001611051959493929190612533565b6040516020818303038152906040528051906020012081600301541461107657600080fd5b600054604051633973654760e01b8152620100009091046001600160a01b0316906339736547906110af90859088908890600401612719565b600060405180830381600087803b1580156110c957600080fd5b505af11580156110dd573d6000803e3d6000fd5b50506000546040516323b872dd60e01b8152620100009091046001600160a01b031692506323b872dd915061111a9030908c9087906004016124db565b600060405180830381600087803b15801561113457600080fd5b505af1158015611148573d6000803e3d6000fd5b50505050866001600160a01b031682896001600160a01b03167fccb570a5507370ad990f0f6091a4b750d2265609fa24e591b68a9483f1fcea96336040516109cc91906124ae565b600080546201000090046001600160a01b031633146111ae57600080fd5b600080838060200190518101906111c59190611d67565b600087815260036020526040902091935091506111e481878585611905565b5063b276331760e01b979650505050505050565b6000338360405160200161120d9291906124c2565b60408051601f1981840301815291815281516020928301206000818152600290935291209091506001815460ff16600381111561124657fe5b148061126157506002815460ff16600381111561125f57fe5b145b61126a57600080fd5b6002808201546000848152602083905260408120805460ff19168155600181018290559283018190556003830155600491820180546001600160a01b0319169055908201546112c4906001600160a01b03163033846118a5565b837fbaf75aa58d2f7ec472f5e3a652015c4bfb74087acb3cd1d34c3a9c59c355c06d33876040516112f69291906124c2565b60405180910390a25050505050565b61130f85806127d5565b159050806113215750611321866118ff565b61132a57600080fd5b60008054604051631e43c35560e31b815282916201000090046001600160a01b03169063f21e1aa890611365908e908e908e90600401612719565b60206040518083038186803b15801561137d57600080fd5b505afa158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b59190611f27565b600054604051634f558e7960e01b81529192506201000090046001600160a01b031690634f558e79906113ec908490600401612710565b60206040518083038186803b15801561140457600080fd5b505afa158015611418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143c9190611eb7565b1561144657600080fd5b600054604051632eec7b5560e11b815230916201000090046001600160a01b031690635dd8f6aa9061147c908f90600401612710565b60206040518083038186803b15801561149457600080fd5b505afa1580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cc9190611d4b565b6001600160a01b0316146114df57600080fd5b60008b8152600360205260409020805460018201546001600160a01b03909116935085101561150d57600080fd5b600084836040516020016115229291906124c2565b60408051601f1981840301815291815281516020928301206000818152600290935290822090925090815460ff16600381111561155b57fe5b1461156557600080fd5b805460ff19166001178155600281018790556004810180546001600160a01b0387166001600160a01b03199091161790558a6115a18b806127d5565b6115ae60208e018e6127d5565b6040516020016115c2959493929190612533565b60408051601f1981840301815291905280516020909101206003820155600181018e90556115fb6001600160a01b03861687308a6118a5565b5050505089876001600160a01b0316836001600160a01b03167fc913c510ad629b5dffaa2ed188b974db06964c1420ccb1638a840abc8b30d3cd8c8c8b8b8b8b60405161164d96959493929190612605565b60405180910390a450505050505050505050565b6000546040516331a9108f60e11b815233916201000090046001600160a01b031690636352211e90611697908590600401612710565b60206040518083038186803b1580156116af57600080fd5b505afa1580156116c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e79190611d4b565b6001600160a01b0316146116fa57600080fd5b6000838360405160200161170f9291906124c2565b60408051601f198184030181529181528151602092830120600081815260029093529120600181015491925090831461174757600080fd5b6001815460ff16600381111561175957fe5b1461176357600080fd5b805460ff191660021781556040517f68113ca7b748f7d17637d79856900bc9336b88166e726bc9b55c62a39408b407906117a090879087906124c2565b60405180910390a15050505050565b6117b7611c6e565b6002600084846040516020016117ce9291906124c2565b60408051601f1981840301815291815281516020928301208352908201929092528101600020815160a081019092528054829060ff16600381111561180f57fe5b600381111561181a57fe5b81526001820154602082015260028201546040820152600382015460608201526004909101546001600160a01b03166080909101529392505050565b61185e611c9e565b50600081815260036020908152604091829020825180840190935280546001600160a01b0316835260010154908201525b919050565b600061189f306118ff565b15905090565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610ddb9085906119a5565b3b151590565b83546001600160a01b0319166001600160a01b03831617845560405183907f5b2016a1ea8387058405dc62c0671c0b374b98c435e331f124b89499b2f9f29c906119509085906124ae565b60405180910390a2610ddb8484835b808360010181905550817f86780397f7caa7c8f95178b8088dece6299722a706b3acca977dd807d9b30f7b826040516119989190612710565b60405180910390a2505050565b60006119fa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a569092919063ffffffff16565b8051909150156103e257808060200190516020811015611a1957600080fd5b50516103e25760405162461bcd60e51b815260040180806020018281038252602a8152602001806128cc602a913960400191505060405180910390fd5b6060611a658484600085611a6f565b90505b9392505050565b606082471015611ab05760405162461bcd60e51b81526004018080602001828103825260268152602001806128786026913960400191505060405180910390fd5b611ab9856118ff565b611b0a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310611b485780518252601f199092019160209182019101611b29565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611baa576040519150601f19603f3d011682016040523d82523d6000602084013e611baf565b606091505b5091509150611bbf828286611bca565b979650505050505050565b60608315611bd9575081611a68565b825115611be95782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611c33578181015183820152602001611c1b565b50505050905090810190601f168015611c605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040805160a081019091528060008152600060208201819052604082018190526060820181905260809091015290565b604080518082019091526000808252602082015290565b803561188f8161285f565b60008083601f840112611cd1578182fd5b50813567ffffffffffffffff811115611ce8578182fd5b602083019150836020828501011115611d0057600080fd5b9250929050565b600060608284031215611d18578081fd5b50919050565b600060408284031215611d18578081fd5b600060208284031215611d40578081fd5b8135611a688161285f565b600060208284031215611d5c578081fd5b8151611a688161285f565b60008060408385031215611d79578081fd5b8251611d848161285f565b6020939093015192949293505050565b60008060008060808587031215611da9578182fd5b8435611db48161285f565b9350602085810135611dc58161285f565b935060408601359250606086013567ffffffffffffffff80821115611de8578384fd5b818801915088601f830112611dfb578384fd5b813581811115611e0757fe5b604051601f8201601f1916810185018381118282101715611e2457fe5b60405281815283820185018b1015611e3a578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215611e6a578182fd5b8235611e758161285f565b946020939093013593505050565b600080600060608486031215611e97578283fd5b8335611ea28161285f565b95602085013595506040909401359392505050565b600060208284031215611ec8578081fd5b81518015158114611a68578182fd5b60008060408385031215611ee9578182fd5b8235611ef48161285f565b91506020830135611f048161285f565b809150509250929050565b600060208284031215611f20578081fd5b5035919050565b600060208284031215611f38578081fd5b5051919050565b600080600060608486031215611f53578283fd5b833592506020840135611f658161285f565b929592945050506040919091013590565b600080600080600080600080600060c08a8c031215611f93578687fd5b8935985060208a013567ffffffffffffffff80821115611fb1578889fd5b611fbd8d838e01611cc0565b909a50985060408c01359150611fd28261285f565b90965060608b013590611fe48261285f565b90955060808b01359080821115611ff9578586fd5b6120058d838e01611cc0565b909650945060a08c013591508082111561201d578384fd5b5061202a8c828d01611cc0565b915080935050809150509295985092959850929598565b600080600080600080600080600080600060e08c8e031215612061578485fd5b8b359a5067ffffffffffffffff8060208e0135111561207e578586fd5b61208e8e60208f01358f01611cc0565b909b50995061209f60408e01611cb5565b98506120ad60608e01611cb5565b97508060808e013511156120bf578586fd5b6120cf8e60808f01358f01611cc0565b909750955060a08d01358110156120e4578283fd5b6120f48e60a08f01358f01611cc0565b909550935060c08d0135811015612109578283fd5b5061211a8d60c08e01358e01611cc0565b81935080925050509295989b509295989b9093969950565b60008060008060008060008060c0898b03121561214d578182fd5b88359750602089013567ffffffffffffffff8082111561216b578384fd5b6121778c838d01611cc0565b909950975087915061218b60408c01611cb5565b965060608b01359150808211156121a0578384fd5b6121ac8c838d01611d1e565b955060808b01359150808211156121c1578384fd5b6121cd8c838d01611cc0565b909550935060a08b01359150808211156121e5578283fd5b506121f28b828c01611d07565b9150509295985092959890939650565b600080600080600080600080600060e08a8c03121561221f578283fd5b8935985060208a013567ffffffffffffffff8082111561223d578485fd5b6122498d838e01611cc0565b909a50985088915061225d60408d01611cb5565b975060608c0135915080821115612272578485fd5b61227e8d838e01611d1e565b965060808c0135915080821115612293578485fd5b61229f8d838e01611cc0565b909650945060a08c01359150808211156122b7578384fd5b506122c48c828d01611d07565b9250506122d360c08b01611cb5565b90509295985092959850929598565b60008060008060008060008060c0898b0312156122fd578182fd5b88359750602089013567ffffffffffffffff8082111561231b578384fd5b6123278c838d01611cc0565b909950975060408b0135915061233c8261285f565b90955060608a01359080821115612351578384fd5b61235d8c838d01611d1e565b955060808b0135915080821115612372578384fd5b5061237f8b828c01611cc0565b999c989b50969995989497949560a00135949350505050565b600080600080600080600080600060e08a8c0312156123b5578283fd5b8935985060208a013567ffffffffffffffff808211156123d3578485fd5b6123df8d838e01611cc0565b909a50985060408c013591506123f48261285f565b90965060608b01359080821115612409578485fd5b6124158d838e01611d1e565b965060808c013591508082111561242a578485fd5b506124378c828d01611cc0565b90955093505060a08a0135915060c08a01356124528161285f565b809150509295985092959850929598565b60008060408385031215612475578182fd5b50508035926020909101359150565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0386811682528516602082015260408101849052608060608201819052600090611bbf9083018486612484565b6001600160a01b03861681526060602082018190526000906125589083018688612484565b828103604084015261256b818587612484565b98975050505050505050565b60c0808252810187905260008860e08301825b8a8110156125ba57823561259d8161285f565b6001600160a01b031682526020928301929091019060010161258a565b506020840198909852505060408101949094526001600160a01b0392831660608501529116608083015260a09091015292915050565b6001600160e01b031991909116815260200190565b60006080825261261960808301888a612484565b828103602084015261262b878861281a565b6040835261263d604084018284612484565b91505061264d602089018961281a565b8383036020850152612660838284612484565b93505050508281036040840152612678818688612484565b915050826060830152979650505050505050565b6c42616e636f724e6574776f726b60981b815260200190565b81516001600160a01b031681526020918201519181019190915260400190565b815160a0820190600481106126d657fe5b82526020838101519083015260408084015190830152606080840151908301526080928301516001600160a01b0316929091019190915290565b90815260200190565b600084825260406020830152612733604083018486612484565b95945050505050565b600088825260a0602083015261275660a08301888a612484565b6001600160a01b038781166040850152861660608401528281036080840152612780818587612484565b9a9950505050505050505050565b6000808335601e198436030181126127a4578283fd5b83018035915067ffffffffffffffff8211156127be578283fd5b6020908101925081023603821315611d0057600080fd5b6000808335601e198436030181126127eb578283fd5b83018035915067ffffffffffffffff821115612805578283fd5b602001915036819003821315611d0057600080fd5b6000808335601e19843603018112612830578283fd5b830160208101925035905067ffffffffffffffff81111561285057600080fd5b803603831315611d0057600080fd5b6001600160a01b038116811461287457600080fd5b5056fe416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212208fd10ffe009b0806480c6e2cf28ca30192e09371a2991a8ab24966734d4c932e64736f6c63430007060033";
