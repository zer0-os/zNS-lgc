/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { XTransferRerouter } from "../XTransferRerouter";

export class XTransferRerouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _reroutingEnabled: boolean,
    overrides?: Overrides
  ): Promise<XTransferRerouter> {
    return super.deploy(
      _reroutingEnabled,
      overrides || {}
    ) as Promise<XTransferRerouter>;
  }
  getDeployTransaction(
    _reroutingEnabled: boolean,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_reroutingEnabled, overrides || {});
  }
  attach(address: string): XTransferRerouter {
    return super.attach(address) as XTransferRerouter;
  }
  connect(signer: Signer): XTransferRerouter__factory {
    return super.connect(signer) as XTransferRerouter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XTransferRerouter {
    return new Contract(address, _abi, signerOrProvider) as XTransferRerouter;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bool",
        name: "_reroutingEnabled",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_prevOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_toBlockchain",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_to",
        type: "bytes32",
      },
    ],
    name: "TxReroute",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_enable",
        type: "bool",
      },
    ],
    name: "enableRerouting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "newOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_blockchain",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_to",
        type: "bytes32",
      },
    ],
    name: "rerouteTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reroutingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104c93803806104c98339818101604052602081101561003357600080fd5b5051600080546001600160a01b0319163317905560018054911515600160a01b0260ff60a01b19909216919091179055610457806100726000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063d4ee1d901161005b578063d4ee1d90146100cf578063e3db16f7146100d7578063edd63c3514610100578063f2fde38b1461011c5761007d565b806379ba5097146100825780638da5cb5b1461008c578063a3ebe71c146100b0575b600080fd5b61008a610142565b005b610094610212565b604080516001600160a01b039092168252519081900360200190f35b61008a600480360360208110156100c657600080fd5b50351515610221565b610094610262565b61008a600480360360608110156100ed57600080fd5b5080359060208101359060400135610271565b6101086102b8565b604080519115158252519081900360200190f35b61008a6004803603602081101561013257600080fd5b50356001600160a01b03166102c8565b6001546001600160a01b031633146101a1576040805162461bcd60e51b815260206004820152601160248201527f4552525f4143434553535f44454e494544000000000000000000000000000000604482015290519081900360640190fd5b600154600080546040516001600160a01b0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031681565b610229610362565b60018054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6001546001600160a01b031681565b6102796103c3565b6040805183815260208101839052815185927fb5c80f971fb729e469ffa874c60425659ce82cb4adcfba9731af35ef87b6e619928290030190a2505050565b600154600160a01b900460ff1681565b6102d0610362565b6000546001600160a01b0382811691161415610333576040805162461bcd60e51b815260206004820152600e60248201527f4552525f53414d455f4f574e4552000000000000000000000000000000000000604482015290519081900360640190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103c1576040805162461bcd60e51b815260206004820152601160248201527f4552525f4143434553535f44454e494544000000000000000000000000000000604482015290519081900360640190fd5b565b600154600160a01b900460ff166103c1576040805162461bcd60e51b815260206004820152600c60248201527f4552525f44495341424c45440000000000000000000000000000000000000000604482015290519081900360640190fdfea2646970667358221220ef84778414a50f8a5616cc387fce67618a566954aaa33c1819cb14f529f149fa64736f6c634300060c0033";
